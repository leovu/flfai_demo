// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// But you can define a new GeneratedModule as following:
// class MyAppGeneratedModule extends AppGeneratedModule {
//   @override
//   Map<String, dynamic> components() {
//     return <String, dynamic>{
//       ...super.components(),
//      // add your cases here.
//     };
//   }
//
//   /// true means it's a widget.
//   @override
//   Map<String, bool> mapping() {
//     return <String, bool>{
//       ...super.mapping(),
//       // remember add your cases here too.
//     };
//   }
// }
// **************************************************************************
// Auto generated by https://github.com/wuba/Fair
// **************************************************************************
//
// ignore_for_file: implementation_imports, unused_import, depend_on_referenced_packages, unused_shown_name, duplicate_import, always_specify_types, unnecessary_import

import 'package:flutter_fair_demo/presentation/widgets/custom_button.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_text_field.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_scaffold.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_check_box.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_progress_indcator.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_background_app.dart';
import 'package:flutter_fair_demo/presentation/modules/splash/src/ui/splash_screen.dart';
import 'package:flutter_fair_demo/presentation/modules/login/src/ui/login_screen.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_fair_demo/presentation/widgets/custom_navigator.dart';
import 'package:flutter_fair_demo/common/theme.dart';
import 'package:flutter_fair_demo/common/assets.dart';
import 'dart:convert';
import 'package:file_saver/file_saver.dart';
import 'package:fair/fair.dart';
import 'package:flutter/cupertino.dart';
import 'package:shared_preferences/shared_preferences.dart';

import 'package:flutter/material.dart';
import 'package:fair/fair.dart';
import 'package:fair_version/fair_version.dart';

class AppGeneratedModule extends GeneratedModule {
  @override
  Map<String, dynamic> components() {
    return {
      'SplashScreen': (props) => SplashScreen(
            key: props['key'],
          ),
      'LoginScreen': (props) => LoginScreen(
            key: props['key'],
          ),
      'CustomScaffold': (props) => CustomScaffold(
            key: props['key'],
            title: props['title'],
            backgroundColor: props['backgroundColor'],
            onWillPop: props['onWillPop'],
            isBottomSheet: props['isBottomSheet'] ?? false,
            body: props['body'],
            textStyleTitle: props['textStyleTitle'],
            textAlign: props['textAlign'],
          ),
      'CustomBackgroundDayApp': (props) => CustomBackgroundDayApp(
            key: props['key'],
          ),
      'CustomBackgroundNightApp': (props) => CustomBackgroundNightApp(
            key: props['key'],
          ),
      'CustomButton': (props) => CustomButton(
            key: props['key'],
            backgroundColor: props['backgroundColor'],
            borderColor: props['borderColor'],
            icon: props['icon'],
            text: props['text'],
            style: props['style'],
            onTap: props['onTap'],
            isExpand: props['isExpand'] ?? true,
            isIcon: props['isIcon'] ?? false,
            iconColor: props['iconColor'],
            enable: props['enable'] ?? true,
            heightIcon: props['heightIcon']?.toDouble() ?? 20.0,
            widthIcon: props['widthIcon']?.toDouble() ?? 20.0,
            radius: props['radius']?.toDouble() ?? 8.0,
          ),
      'CustomTextField': (props) => CustomTextField(
            key: props['key'],
            focusNode: props['focusNode'],
            controller: props['controller'],
            hintText: props['hintText'],
            labelText: props['labelText'],
            obscureText: props['obscureText'] ?? false,
            keyboardType: props['keyboardType'] ?? TextInputType.text,
            textInputAction: props['textInputAction'] ?? TextInputAction.done,
            onSubmitted: props['onSubmitted'],
            inputFormatters: as<TextInputFormatter>(props['inputFormatters']) ??
                const <TextInputFormatter>[],
            onChanged: props['onChanged'],
            autofocus: props['autofocus'],
            readOnly: props['readOnly'] ?? false,
            onTap: props['onTap'],
            enableBorder: props['enableBorder'] ?? false,
            maxLines: props['maxLines'],
            style: props['style'],
            error: props['error'] ?? "",
            radius: props['radius']?.toDouble() ?? 5.0,
            backgroundColor: props['backgroundColor'],
            hintStyle: props['hintStyle'],
            suffixChild: props['suffixChild'],
            textAlign: props['textAlign'],
            border: props['border'],
            prefixChild: props['prefixChild'],
          ),
      'CustomProgressIndicator': (props) => CustomProgressIndicator(
            key: props['key'],
          ),
      'CustomCheckbox': (props) => CustomCheckbox(
            key: props['key'],
            value: props['value'],
            onChanged: props['onChanged'],
            activeColor: props['activeColor'],
            checkColor: props['checkColor'],
          ),
    };
  }

  @override
  Map<String, bool> mapping() {
    return const {
      'SplashScreen': true,
      'LoginScreen': true,
      'CustomScaffold': true,
      'CustomBackgroundDayApp': true,
      'CustomBackgroundNightApp': true,
      'CustomButton': true,
      'CustomTextField': true,
      'CustomProgressIndicator': true,
      'CustomCheckbox': true,
    };
  }
}

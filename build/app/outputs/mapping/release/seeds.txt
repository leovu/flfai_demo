com.eclipsesource.v8.debug.DebugHandler
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.android.gms.common.api.internal.BasePendingResult
com.eclipsesource.v8.debug.mirror.PropertyMirror
androidx.window.embedding.ActivityRule
androidx.window.layout.WindowMetricsCalculatorCompat
kotlinx.coroutines.internal.MainDispatcherFactory
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
io.flutter.plugins.urllauncher.WebViewActivity
com.google.firebase.components.ComponentDiscoveryService
com.google.android.gms.common.api.internal.LifecycleCallback
com.eclipsesource.v8.debug.DebugHandler$1
androidx.window.layout.ActivityCompatHelperApi24
android.support.v4.app.RemoteActionCompatParcelizer
com.eclipsesource.v8.V8ScriptException
com.eclipsesource.v8.PlatformDetector
androidx.window.layout.WindowBackend
com.eclipsesource.v8.V8Locker
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.window.layout.DisplayCompatHelperApi17
com.eclipsesource.v8.utils.TypeAdapter
androidx.window.embedding.EmbeddingTranslatingCallback
com.eclipsesource.v8.debug.DebugHandler$DebugEvent
com.eclipsesource.v8.debug.mirror.Frame
androidx.window.layout.WindowMetrics
com.eclipsesource.v8.V8Array
androidx.window.embedding.SplitPairFilter
com.eclipsesource.v8.debug.V8DebugServer
androidx.window.embedding.SplitInfo
com.wuba.fair.channel.FairFfi
com.eclipsesource.v8.NodeJS
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.eclipsesource.v8.inspector.DebuggerConnectionListener
androidx.window.core.ExperimentalWindowApi
androidx.versionedparcelable.ParcelImpl
com.eclipsesource.v8.V8Object
com.eclipsesource.v8.V8
androidx.window.layout.HardwareFoldingFeature$Type$Companion
io.flutter.plugins.GeneratedPluginRegistrant
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.HardwareFoldingFeature$Type
com.google.android.gms.common.GooglePlayServicesManifestException
kotlinx.coroutines.CoroutineExceptionHandler
com.eclipsesource.v8.PlatformDetector$OS
com.eclipsesource.v8.debug.BreakHandler
com.eclipsesource.v8.debug.ScriptBreakPoint
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.window.R
com.eclipsesource.v8.V8ScriptCompilationException
androidx.window.core.Version$bigInteger$2
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.eclipsesource.v8.ReferenceHandler
androidx.window.embedding.SplitRule$LayoutDir
com.eclipsesource.v8.debug.mirror.StringMirror
com.eclipsesource.v8.debug.mirror.Scope
com.eclipsesource.v8.debug.mirror.SourceLocation
com.eclipsesource.v8.LibraryLoader
androidx.window.embedding.EmbeddingRule
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
com.google.android.gms.common.api.GoogleApiActivity
com.google.firebase.provider.FirebaseInitProvider
com.google.firebase.storage.StorageRegistrar
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
androidx.window.layout.FoldingFeature$Orientation$Companion
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.eclipsesource.v8.utils.ConcurrentV8
kotlin.coroutines.jvm.internal.BaseContinuationImpl
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.embedding.ActivityFilter
androidx.annotation.Keep
com.eclipsesource.v8.SignatureProvider
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.eclipsesource.v8.utils.TypedArray
com.eclipsesource.v8.debug.mirror.ValueMirror
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
androidx.window.R$id
com.eclipsesource.v8.PlatformDetector$Arch
com.eclipsesource.v8.JavaCallback
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.DisplayCompatHelperApi28
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop
com.eclipsesource.v8.V8Value
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.embedding.MatcherUtils
com.google.android.gms.common.util.DynamiteApi
com.eclipsesource.v8.Platform
com.eclipsesource.v8.PlatformDetector$Vendor
com.google.firebase.components.ComponentRegistrar
androidx.window.embedding.SplitPlaceholderRule
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.window.core.Bounds
com.eclipsesource.v8.debug.ExceptionEvent
com.eclipsesource.v8.V8$MethodDescriptor
com.eclipsesource.v8.debug.CompileEvent
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind
com.eclipsesource.v8.utils.V8Thread
androidx.window.layout.WindowMetricsCalculator$Companion
com.eclipsesource.v8.V8Object$Undefined
androidx.window.embedding.SplitController
androidx.window.R$styleable
com.eclipsesource.v8.utils.V8Executor$ExecutorTermination
androidx.lifecycle.LiveData$LifecycleBoundObserver
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
com.eclipsesource.v8.debug.EventData
androidx.window.embedding.SplitRuleParser
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
androidx.window.layout.EmptyDecorator
com.eclipsesource.v8.debug.BreakEvent
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.eclipsesource.v8.debug.V8DebugServer$1
androidx.window.embedding.SplitPairRule
androidx.window.layout.SidecarWindowBackend
com.eclipsesource.v8.debug.mirror.ObjectMirror
com.eclipsesource.v8.utils.V8Executor
androidx.window.embedding.SplitController$Companion
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.embedding.ExtensionEmbeddingBackend
com.eclipsesource.v8.utils.MemoryManager$1
com.eclipsesource.v8.utils.V8ObjectUtils$ListWrapper
com.eclipsesource.v8.inspector.V8InspectorDelegate
com.eclipsesource.v8.Releasable
androidx.window.embedding.SplitRule
com.eclipsesource.v8.utils.V8PropertyMap
androidx.window.layout.WindowInfoTrackerDecorator
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.google.android.gms.common.internal.ReflectedParcelable
androidx.savedstate.SavedStateRegistry$1
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
androidx.window.embedding.EmptyEmbeddingComponent
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.window.layout.DisplayFeature
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.SidecarCompat
com.google.firebase.FirebaseCommonRegistrar
androidx.window.layout.SidecarCompat$Companion
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.window.embedding.EmbeddingCompat$Companion
com.eclipsesource.v8.utils.V8Map
com.eclipsesource.v8.utils.ArrayBuffer
androidx.window.embedding.EmbeddingAdapter
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.layout.FoldingFeature$Orientation
androidx.window.java.R
com.eclipsesource.v8.debug.mirror.FunctionMirror
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.activity.ImmLeaksCleaner
androidx.window.core.Version
androidx.window.core.Version$Companion
androidx.window.layout.FoldingFeature$State
androidx.window.R$attr
androidx.activity.ComponentActivity$2
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.eclipsesource.v8.debug.StepAction
com.eclipsesource.v8.debug.ExecutionState
io.flutter.embedding.engine.FlutterOverlaySurface
com.eclipsesource.v8.debug.mirror.Mirror
io.flutter.embedding.android.FlutterSplashView$SavedState
androidx.versionedparcelable.CustomVersionedParcelable
androidx.lifecycle.Lifecycling$1
com.eclipsesource.v8.utils.SingleTypeAdapter
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
androidx.window.layout.WindowMetricsCalculator
androidx.window.layout.ExtensionInterfaceCompat
com.eclipsesource.v8.debug.mirror.ArrayMirror
com.google.android.gms.common.api.Status
androidx.core.graphics.drawable.IconCompat
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.window.layout.SidecarCompat$DistinctElementCallback
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.eclipsesource.v8.V8Function
androidx.fragment.app.Fragment$2
com.eclipsesource.v8.utils.MemoryManager
androidx.window.layout.SidecarWindowBackend$Companion
androidx.window.layout.WindowInfoTracker
androidx.window.layout.HardwareFoldingFeature$Companion
com.eclipsesource.v8.utils.V8ObjectUtils$DefaultTypeAdapter
androidx.window.layout.FoldingFeature$State$Companion
kotlin.internal.jdk7.JDK7PlatformImplementations
androidx.window.embedding.SplitRule$Api30Impl
com.eclipsesource.v8.debug.mirror.UndefinedMirror
com.eclipsesource.v8.V8ScriptExecutionException
com.eclipsesource.v8.V8ArrayBuffer
com.eclipsesource.v8.inspector.V8Inspector
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.eclipsesource.v8.debug.mirror.Scope$ScopeType
com.eclipsesource.v8.debug.V8DebugServer$EventHandler
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
com.eclipsesource.v8.utils.ConcurrentV8$1
com.eclipsesource.v8.debug.mirror.PropertiesArray
com.example.flutter_fair_demo.MainActivity
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
io.flutter.view.AccessibilityViewEmbedder
androidx.window.layout.SidecarAdapter
androidx.core.app.RemoteActionCompatParcelizer
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler
androidx.window.embedding.EmbeddingInterfaceCompat
com.eclipsesource.v8.JavaVoidCallback
com.eclipsesource.v8.utils.V8Runnable
androidx.window.layout.WindowLayoutInfo
com.eclipsesource.v8.debug.mirror.NumberMirror
io.flutter.embedding.engine.FlutterJNI
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
com.google.android.gms.common.annotation.KeepName
androidx.savedstate.Recreator
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
androidx.core.app.RemoteActionCompat
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.window.layout.HardwareFoldingFeature
com.eclipsesource.v8.V8RuntimeException
io.flutter.view.FlutterCallbackInformation
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
androidx.window.layout.FoldingFeature
androidx.window.layout.WindowMetricsCalculatorDecorator
com.eclipsesource.v8.NodeJS$1
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar
com.eclipsesource.v8.V8TypedArray
androidx.window.embedding.ActivityStack
com.eclipsesource.v8.debug.mirror.NullMirror
kotlinx.coroutines.android.AndroidDispatcherFactory
com.eclipsesource.v8.debug.mirror.BooleanMirror
com.eclipsesource.v8.V8TypedArray$V8ArrayData
androidx.activity.ComponentActivity$3
com.google.firebase.concurrent.ExecutorsRegistrar
com.eclipsesource.v8.V8$1
com.eclipsesource.v8.V8Array$Undefined
androidx.window.layout.SidecarCompat$FirstAttachAdapter
com.eclipsesource.v8.utils.V8ObjectUtils
com.google.android.gms.common.api.Scope
androidx.window.layout.WindowInfoTrackerImpl
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.core.app.CoreComponentFactory
com.eclipsesource.v8.V8ResultUndefined
com.eclipsesource.v8.NodeJS$2
androidx.window.layout.SidecarAdapter$Companion
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.embedding.SplitRule: int layoutDirection
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.eclipsesource.v8.NodeJS: java.lang.String NODE
com.eclipsesource.v8.utils.V8Map: java.util.Map twinMap
androidx.window.R$attr: int placeholderActivityName
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String SET_LISTENER
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
com.eclipsesource.v8.V8Value: int BYTE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String POSITION
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_ARRAY
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.eclipsesource.v8.V8: int runtimeCounter
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
kotlinx.coroutines.CancelledContinuation: int _resumed
androidx.window.R$styleable: int[] ActivityRule
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String SOURCE_TEXT
com.eclipsesource.v8.debug.ScriptBreakPoint: java.lang.String LINE
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.eclipsesource.v8.V8: java.lang.Error nativeLoadError
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.eclipsesource.v8.utils.V8Executor: java.lang.String script
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.eclipsesource.v8.V8Value: int UNSIGNED_INT_16_ARRAY
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.eclipsesource.v8.utils.V8Executor: boolean forceTerminating
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int size
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: int index
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.eclipsesource.v8.debug.mirror.ObjectMirror: java.lang.String PROPERTIES
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.window.R$attr: int secondaryActivityName
com.eclipsesource.v8.Platform: java.lang.String WINDOWS
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8 v8
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.window.core.Bounds: int right
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String ARGUMENT_COUNT
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.eclipsesource.v8.utils.V8Executor: boolean longRunning
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
kotlin.jvm.internal.FunctionReference: int arity
com.eclipsesource.v8.V8: java.lang.Exception nativeLoadException
com.eclipsesource.v8.V8: java.lang.Object lock
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.eclipsesource.v8.debug.V8DebugServer: boolean traceCommunication
androidx.window.embedding.SplitPairRule: java.util.Set filters
com.eclipsesource.v8.debug.V8DebugServer: com.eclipsesource.v8.V8Object stoppedStateDcp
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.eclipsesource.v8.V8TypedArray$V8ArrayData: com.eclipsesource.v8.V8ArrayBuffer buffer
com.eclipsesource.v8.V8: boolean initialized
com.eclipsesource.v8.debug.V8DebugServer: java.lang.Object clientLock
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_OBJECT
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String DEBUG_OBJECT_NAME
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.eclipsesource.v8.utils.V8Map: java.util.Map map
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.eclipsesource.v8.NodeJS: java.lang.String TMP_JS_EXT
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
kotlinx.coroutines.channels.ArrayChannel: int size
com.eclipsesource.v8.V8$MethodDescriptor: java.lang.Object object
com.eclipsesource.v8.debug.DebugHandler: java.lang.String V8_DEBUG_OBJECT
com.eclipsesource.v8.debug.ScriptBreakPoint: java.lang.String SET_CONDITION
com.eclipsesource.v8.V8$MethodDescriptor: com.eclipsesource.v8.JavaVoidCallback voidCallback
com.eclipsesource.v8.debug.mirror.Scope: java.lang.String SCOPE_OBJECT
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
com.eclipsesource.v8.V8ScriptException: int lineNumber
com.eclipsesource.v8.debug.V8DebugServer: boolean waitForConnection
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.eclipsesource.v8.utils.V8Executor: java.util.LinkedList messageQueue
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
com.eclipsesource.v8.V8Value: int INT_8_ARRAY
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.eclipsesource.v8.utils.V8Executor: com.eclipsesource.v8.V8 runtime
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
com.eclipsesource.v8.Platform: java.lang.String UNKNOWN
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent Exception
com.eclipsesource.v8.debug.mirror.Scope: java.lang.String SCOPE_TYPE
io.flutter.plugin.platform.SingleViewPresentation: int viewId
androidx.window.embedding.SplitRule: int minWidth
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.window.embedding.SplitController: boolean sDebug
com.eclipsesource.v8.debug.DebugHandler$1: int[] $SwitchMap$com$eclipsesource$v8$debug$DebugHandler$DebugEvent
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.eclipsesource.v8.debug.mirror.FunctionMirror: java.lang.String SCRIPT
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.eclipsesource.v8.debug.DebugHandler: java.lang.String FIND_SCRIPT_BREAK_POINT
com.eclipsesource.v8.NodeJS: java.lang.String NEXT_TICK
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String LOCAL_NAME
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent BeforeCompile
androidx.window.R$attr: int splitRatio
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.eclipsesource.v8.V8: boolean nativeLibraryLoaded
com.eclipsesource.v8.V8ScriptException: int startColumn
com.eclipsesource.v8.Platform: java.lang.String MACOSX
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.window.R$styleable: int[] SplitPairFilter
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.R$id: int locale
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.eclipsesource.v8.Platform: java.lang.String NATIVE_CLIENT
androidx.window.core.Version: int patch
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String MAKE_COMPILE_EVENT
com.eclipsesource.v8.LibraryLoader: java.lang.String DELIMITER
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind[] $VALUES
androidx.window.R$attr: int activityName
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.eclipsesource.v8.debug.V8DebugServer: java.net.Socket client
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType[] $VALUES
com.eclipsesource.v8.debug.mirror.FunctionMirror: java.lang.String NAME
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.eclipsesource.v8.V8Locker: com.eclipsesource.v8.V8 runtime
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.eclipsesource.v8.utils.V8PropertyMap: java.util.Hashtable map
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object IGNORE
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: com.eclipsesource.v8.debug.V8DebugServer this$0
androidx.window.R$id: int ltr
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind Indexed
com.eclipsesource.v8.LibraryLoader: java.lang.String SEPARATOR
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent AsyncTaskEvent
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.eclipsesource.v8.NodeJS$1: com.eclipsesource.v8.NodeJS val$node
com.eclipsesource.v8.debug.mirror.ArrayMirror: java.lang.String LENGTH
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.eclipsesource.v8.V8: java.util.List resources
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: com.eclipsesource.v8.debug.DebugHandler this$0
com.eclipsesource.v8.utils.MemoryManager: com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler memoryManagerReferenceHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.window.R$attr: int secondaryActivityAction
com.eclipsesource.v8.debug.DebugHandler: java.util.List breakHandlers
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent PromiseError
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String COLUMN
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Value undefined
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.eclipsesource.v8.debug.DebugHandler: java.lang.String ENABLE_SCRIPT_BREAK_POINT
com.eclipsesource.v8.V8$MethodDescriptor: com.eclipsesource.v8.JavaCallback callback
com.eclipsesource.v8.utils.V8Executor: boolean shuttingDown
com.eclipsesource.v8.debug.ExecutionState: java.lang.String FRAME_COUNT
com.eclipsesource.v8.debug.mirror.Scope: java.lang.String SET_VARIABLE_VALUE
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_UNDEFINED
com.eclipsesource.v8.NodeJS: java.lang.String nodeVersion
androidx.window.R$attr: int activityAction
com.eclipsesource.v8.debug.mirror.PropertiesArray: com.eclipsesource.v8.V8Array v8Array
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.eclipsesource.v8.V8ArrayBuffer: java.nio.ByteBuffer byteBuffer
androidx.window.embedding.SplitInfo: float splitRatio
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.debug.DebugHandler: java.lang.String SET_BREAK_POINT
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Catch
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.eclipsesource.v8.V8Value: int V8_ARRAY_BUFFER
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlin.jvm.internal.CallableReference: java.lang.Class owner
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent Break
com.eclipsesource.v8.V8$MethodDescriptor: boolean includeReceiver
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.eclipsesource.v8.V8: java.util.Map functionRegistry
com.eclipsesource.v8.debug.mirror.SourceLocation: java.lang.String scriptName
com.eclipsesource.v8.V8Value: boolean released
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String ARGUMENT_VALUE
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String J2V8_VERSION
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String HEADER_TYPE
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String REDHAT_RELEASE_FILE
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Locker locker
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Closure
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String SCOPE_COUNT
com.eclipsesource.v8.debug.mirror.SourceLocation: int position
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_FUNCTION
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int offset
com.eclipsesource.v8.debug.V8DebugServer$EventHandler: com.eclipsesource.v8.debug.V8DebugServer this$0
com.eclipsesource.v8.V8Value: int NULL
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String LOCAL_VALUE
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.eclipsesource.v8.V8$MethodDescriptor: java.lang.reflect.Method method
androidx.window.R$attr: int clearTop
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.eclipsesource.v8.NodeJS$2: com.eclipsesource.v8.NodeJS this$0
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.eclipsesource.v8.V8$MethodDescriptor: com.eclipsesource.v8.V8 this$0
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_BOOLEAN
com.eclipsesource.v8.utils.V8Executor: java.lang.Exception exception
com.eclipsesource.v8.V8ScriptException: java.lang.String jsStackTrace
com.eclipsesource.v8.inspector.V8Inspector: java.util.List debuggerConnectionListeners
com.eclipsesource.v8.V8: java.util.LinkedList referenceHandlers
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: int from
com.eclipsesource.v8.NodeJS: java.lang.String PROCESS
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8 v8
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.eclipsesource.v8.V8: com.eclipsesource.v8.utils.V8Map executors
com.eclipsesource.v8.V8Value: int UNSIGNED_INT_8_ARRAY
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.layout.SidecarCompat: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String SOURCE_LOCATION
com.eclipsesource.v8.V8Value: int V8_OBJECT
com.eclipsesource.v8.debug.DebugHandler: java.lang.String SCRIPT_BREAK_POINTS
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
androidx.window.core.Version: java.lang.String description
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.embedding.ActivityRule: java.util.Set filters
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.eclipsesource.v8.NodeJS: java.lang.String STARTUP_CALLBACK
androidx.window.core.Bounds: int left
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String DEBUG_BREAK_HANDLER
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.eclipsesource.v8.V8Value: int UNSIGNED_INT_32_ARRAY
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String[] LINUX_OS_RELEASE_FILES
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.eclipsesource.v8.debug.DebugHandler: java.lang.String SET_SCRIPT_BREAK_POINT_BY_NAME
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.eclipsesource.v8.debug.mirror.ObjectMirror: java.lang.String PROPERTY_NAMES
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String HEADER_V8_VERSION
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.eclipsesource.v8.debug.DebugHandler: java.lang.String DEBUG_BREAK_HANDLER
com.eclipsesource.v8.V8Value: int FLOAT_64_ARRAY
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Script
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.eclipsesource.v8.V8Value: int INT_32_ARRAY
kotlin.jvm.internal.FunctionReference: int flags
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlin.jvm.internal.Lambda: int arity
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.eclipsesource.v8.debug.DebugHandler: com.eclipsesource.v8.V8Object debugObject
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String HEADER_EMBEDDING_HOST
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.eclipsesource.v8.V8Locker: boolean released
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Block
com.eclipsesource.v8.V8Value: int V8_TYPED_ARRAY
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction STEP_FRAME
com.eclipsesource.v8.Platform: java.lang.String LINUX
com.eclipsesource.v8.debug.ScriptBreakPoint: com.eclipsesource.v8.V8Object v8Object
com.eclipsesource.v8.debug.DebugHandler: java.lang.String DISABLE_SCRIPT_BREAK_POINT
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
com.eclipsesource.v8.debug.ExecutionState: java.lang.String FRAME
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
com.eclipsesource.v8.debug.ExecutionState: com.eclipsesource.v8.V8Object v8Object
com.eclipsesource.v8.V8Value: int INT_16_ARRAY
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String PROTOCOL_EOL
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.eclipsesource.v8.NodeJS: java.lang.String STARTUP_SCRIPT_NAME
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent[] $VALUES
com.eclipsesource.v8.V8: com.eclipsesource.v8.SignatureProvider signatureProvider
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.eclipsesource.v8.utils.V8Thread: com.eclipsesource.v8.V8 runtime
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.eclipsesource.v8.utils.V8Executor: java.lang.String result
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.eclipsesource.v8.utils.TypeAdapter: java.lang.Object DEFAULT
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.eclipsesource.v8.utils.V8Thread: com.eclipsesource.v8.utils.V8Runnable target
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String V8_VERSION
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.eclipsesource.v8.V8Value: int UNKNOWN
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_STRING
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String LINE
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
com.eclipsesource.v8.debug.mirror.SourceLocation: int column
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
kotlinx.coroutines.InvokeOnCancelling: int _invoked
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.window.R$styleable: int ActivityFilter_activityAction
com.eclipsesource.v8.V8Value: int UNDEFINED
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.eclipsesource.v8.debug.V8DebugServer: byte[] PROTOCOL_EOL_BYTES
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.eclipsesource.v8.debug.V8DebugServer: java.nio.charset.Charset PROTOCOL_CHARSET
androidx.window.R$attr: int alwaysExpand
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8Function require
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.eclipsesource.v8.debug.BreakEvent: java.lang.String SOURCE_LINE_TEXT
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.eclipsesource.v8.debug.DebugHandler: java.lang.String CLEAR_BREAK_POINT
com.eclipsesource.v8.V8Value: int INTEGER
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.window.embedding.SplitRule: int minSmallestWidth
com.eclipsesource.v8.debug.ScriptBreakPoint: java.lang.String NUMBER
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int type
com.eclipsesource.v8.NodeJS$2: java.io.File val$file
com.eclipsesource.v8.V8: long v8RuntimePtr
com.eclipsesource.v8.V8Value: int STRING
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.eclipsesource.v8.debug.ExecutionState: java.lang.String PREPARE_STEP
com.eclipsesource.v8.utils.V8Executor$ExecutorTermination: com.eclipsesource.v8.utils.V8Executor this$0
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String ARGUMENT_NAME
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.window.R$styleable: int[] ActivityFilter
com.eclipsesource.v8.utils.MemoryManager: java.util.ArrayList references
com.eclipsesource.v8.debug.DebugHandler: java.lang.String SET_LISTENER
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.core.Version: int minor
androidx.window.core.Version: int major
com.eclipsesource.v8.V8Locker: java.lang.Thread thread
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: int index
com.eclipsesource.v8.debug.mirror.SourceLocation: java.lang.String sourceText
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.embedding.SplitRule: float splitRatio
com.eclipsesource.v8.V8Value: int FLOAT_32_ARRAY
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.eclipsesource.v8.V8: java.lang.Object invalid
com.eclipsesource.v8.V8Value: int DOUBLE
com.eclipsesource.v8.debug.V8DebugServer: java.net.ServerSocket server
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.eclipsesource.v8.debug.DebugHandler: java.lang.String CHANGE_BREAK_POINT_CONDITION
com.eclipsesource.v8.utils.SingleTypeAdapter: int typeToAdapt
androidx.window.R$styleable: int[] SplitPairRule
com.eclipsesource.v8.debug.BreakEvent: java.lang.String SOURCE_COLUMN
com.eclipsesource.v8.utils.MemoryManager: boolean releasing
com.eclipsesource.v8.V8: java.util.LinkedList releaseHandlers
com.eclipsesource.v8.debug.DebugHandler: com.eclipsesource.v8.V8 runtime
com.eclipsesource.v8.debug.BreakEvent: java.lang.String SOURCE_LINE
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.eclipsesource.v8.V8ScriptException: java.lang.String sourceLine
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_NUMBER
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String SCOPE
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String LOCAL_COUNT
com.eclipsesource.v8.debug.V8DebugServer: com.eclipsesource.v8.V8 runtime
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent NewFunction
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.eclipsesource.v8.V8Value: long objectHandle
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Global
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction STEP_IN
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction[] $VALUES
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.eclipsesource.v8.utils.ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer arrayBuffer
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.utils.TypeAdapter DEFAULT_TYPE_ADAPTER
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String SCRIPT
com.eclipsesource.v8.debug.EventData: com.eclipsesource.v8.V8Object v8Object
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String MAKE_BREAK_EVENT
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.eclipsesource.v8.NodeJS: java.lang.String VERSIONS
com.eclipsesource.v8.V8: java.util.Map v8WeakReferences
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String HEADER_PROTOCOL_VERSION
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.eclipsesource.v8.V8ScriptException: java.lang.String jsMessage
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String NAME
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler: com.eclipsesource.v8.utils.MemoryManager this$0
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
com.eclipsesource.v8.debug.DebugHandler: java.lang.String DISABLE_ALL_BREAK_POINTS
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.LibraryLoader: java.lang.String SWT_LIB_DIR
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction STEP_OUT
androidx.window.core.Bounds: int bottom
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.window.R$attr: int splitMinWidth
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_VALUE
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.eclipsesource.v8.NodeJS: java.lang.String GLOBAL
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.eclipsesource.v8.Platform: java.lang.String ANDROID
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.eclipsesource.v8.debug.DebugHandler: java.lang.String DEBUG_OBJECT_NAME
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String PROTOCOL_VERSION
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.eclipsesource.v8.debug.mirror.Mirror: com.eclipsesource.v8.V8Object v8Object
com.eclipsesource.v8.inspector.V8Inspector: long inspectorPtr
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String IS_NULL
com.eclipsesource.v8.inspector.V8Inspector: com.eclipsesource.v8.V8 runtime
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.eclipsesource.v8.debug.DebugHandler: java.lang.String NUMBER
com.eclipsesource.v8.utils.ConcurrentV8: com.eclipsesource.v8.V8 v8
com.eclipsesource.v8.debug.V8DebugServer: int PROTOCOL_BUFFER_SIZE
com.eclipsesource.v8.V8: java.lang.String v8Flags
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind Named
com.eclipsesource.v8.debug.ScriptBreakPoint: java.lang.String CONDITION
com.eclipsesource.v8.debug.V8DebugServer: com.eclipsesource.v8.V8Object runningStateDcp
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.eclipsesource.v8.debug.StepAction: int index
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.window.R$attr: int primaryActivityName
com.eclipsesource.v8.inspector.V8Inspector: boolean waitingForConnection
com.eclipsesource.v8.V8Value: int V8_ARRAY
androidx.window.R$id: int rtl
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType With
com.eclipsesource.v8.utils.V8Executor: boolean terminated
androidx.window.core.Bounds: int top
com.eclipsesource.v8.V8Value: int V8_FUNCTION
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent Undefined
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.utils.MemoryManager: com.eclipsesource.v8.V8 v8
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
com.eclipsesource.v8.NodeJS: java.lang.String STARTUP_SCRIPT
com.eclipsesource.v8.V8: long objectReferences
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.eclipsesource.v8.V8Value: int UNSIGNED_INT_8_CLAMPED_ARRAY
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String LINUX_ID_PREFIX
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String V8_DEBUG_OBJECT
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.eclipsesource.v8.V8ScriptException: java.lang.String fileName
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.R$styleable: int[] SplitPlaceholderRule
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.eclipsesource.v8.utils.TypedArray: com.eclipsesource.v8.V8TypedArray typedArray
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType Local
com.eclipsesource.v8.V8: java.util.Map data
androidx.window.R$attr: int finishPrimaryWithSecondary
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.eclipsesource.v8.debug.V8DebugServer: com.eclipsesource.v8.V8Object debugObject
com.eclipsesource.v8.V8ScriptException: int endColumn
com.eclipsesource.v8.utils.ConcurrentV8$1: com.eclipsesource.v8.utils.ConcurrentV8 this$0
androidx.window.R$attr: int splitLayoutDirection
com.eclipsesource.v8.debug.mirror.ValueMirror: java.lang.String VALUE
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.eclipsesource.v8.utils.V8ObjectUtils$ListWrapper: java.util.List list
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.eclipsesource.v8.utils.V8Executor: java.lang.String messageHandler
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String FUNC
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent CompileError
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
com.eclipsesource.v8.utils.MemoryManager: boolean released
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.eclipsesource.v8.debug.V8DebugServer: java.util.List requests
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.eclipsesource.v8.utils.V8PropertyMap: java.util.Set nulls
com.eclipsesource.v8.V8: boolean forceTerminateExecutors
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.firebase.storage.StorageRegistrar: java.lang.String LIBRARY_NAME
com.eclipsesource.v8.debug.mirror.SourceLocation: int line
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction STEP_NEXT
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
androidx.window.R$attr: int finishSecondaryWithPrimary
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: int index
com.eclipsesource.v8.debug.V8DebugServer: byte[] PROTOCOL_CONTENT_LENGTH_BYTES
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.eclipsesource.v8.debug.V8DebugServer: java.lang.String PROTOCOL_CONTENT_LENGTH_HEADER
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.eclipsesource.v8.V8Value: int BOOLEAN
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent AfterCompile
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.eclipsesource.v8.V8Array$Undefined: boolean executeBooleanFunction(java.lang.String,com.eclipsesource.v8.V8Array)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.eclipsesource.v8.inspector.V8InspectorDelegate: void waitFrontendMessageOnPause()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object registerJavaMethod(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class[])
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: void invokeHandler(com.eclipsesource.v8.V8Array,int,com.eclipsesource.v8.debug.BreakHandler)
com.eclipsesource.v8.V8: int _getType(long,long,int,int)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array push(java.lang.String)
com.eclipsesource.v8.V8: void setPrototype(long,long,long)
com.eclipsesource.v8.V8: void setSignatureProvider(com.eclipsesource.v8.SignatureProvider)
com.eclipsesource.v8.V8: long initNewV8UInt16Array(long,long,int,int)
com.eclipsesource.v8.V8Array$Undefined: boolean getBoolean(int)
com.eclipsesource.v8.V8: byte arrayGetByte(long,long,int)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class[],boolean)
com.eclipsesource.v8.V8ScriptException: java.lang.String getFileName()
com.eclipsesource.v8.debug.V8DebugServer: boolean access$300(com.eclipsesource.v8.debug.V8DebugServer)
com.eclipsesource.v8.V8: java.lang.Object executeScript(java.lang.String,java.lang.String)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.eclipsesource.v8.debug.mirror.Mirror: void close()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.eclipsesource.v8.V8ScriptException: java.lang.String createJSStackDetails()
com.eclipsesource.v8.V8: long _initNewV8Int16Array(long,long,int,int)
com.eclipsesource.v8.inspector.V8Inspector: com.eclipsesource.v8.inspector.V8Inspector createV8Inspector(com.eclipsesource.v8.V8,com.eclipsesource.v8.inspector.V8InspectorDelegate,java.lang.String)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.eclipsesource.v8.debug.V8DebugServer: void sendCompileEvent(com.eclipsesource.v8.V8Object)
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
com.eclipsesource.v8.V8: boolean _isWeak(long,long)
com.eclipsesource.v8.V8: long _initNewV8Float32Array(long,long,int,int)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.eclipsesource.v8.utils.V8Executor: V8Executor(java.lang.String)
com.eclipsesource.v8.V8: java.lang.Object get(long,int,long,java.lang.String)
com.eclipsesource.v8.V8: void _terminateExecution(long)
com.eclipsesource.v8.utils.V8Executor: java.lang.String getResult()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object twin()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object add(java.lang.String,int)
com.eclipsesource.v8.V8Array$Undefined: int getType(int,int)
com.eclipsesource.v8.V8: int _getInteger(long,long,java.lang.String)
com.eclipsesource.v8.V8: java.lang.String _arrayGetString(long,long,int)
com.eclipsesource.v8.LibraryLoader: boolean load(java.lang.String,java.lang.StringBuffer)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.eclipsesource.v8.V8: java.lang.Object executeScript(java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
com.eclipsesource.v8.utils.ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer getV8ArrayBuffer()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.eclipsesource.v8.V8ResultUndefined: V8ResultUndefined(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
com.eclipsesource.v8.debug.mirror.StringMirror: boolean isString()
com.eclipsesource.v8.V8Value: void initialize(long,java.lang.Object)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
com.eclipsesource.v8.V8Array: int getInteger(int)
com.eclipsesource.v8.V8: int _arrayGetBytes(long,long,int,int,byte[])
com.eclipsesource.v8.V8: java.lang.String[] arrayGetStrings(long,long,int,int)
com.eclipsesource.v8.V8: java.lang.String[] getKeys(long,long)
com.eclipsesource.v8.utils.V8Executor: java.lang.Exception getException()
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
androidx.window.core.Version: java.lang.String getDescription()
com.eclipsesource.v8.V8: void releaseArguments(java.lang.Object[],boolean)
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.Map toMap(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.utils.V8Map,com.eclipsesource.v8.utils.TypeAdapter)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
com.eclipsesource.v8.utils.V8ObjectUtils$DefaultTypeAdapter: java.lang.Object adapt(int,java.lang.Object)
com.eclipsesource.v8.debug.mirror.FunctionMirror: java.lang.String getScriptName()
com.eclipsesource.v8.inspector.DebuggerConnectionListener: void onDebuggerDisconnected()
com.eclipsesource.v8.V8: int arrayGetDoubles(long,long,int,int,double[])
com.eclipsesource.v8.V8: boolean _isNodeCompatible()
com.eclipsesource.v8.V8Array$Undefined: java.lang.String[] getKeys()
com.eclipsesource.v8.debug.ScriptBreakPoint: void close()
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType valueOf(java.lang.String)
com.eclipsesource.v8.V8TypedArray: long createTypedArray(long,com.eclipsesource.v8.V8TypedArray$V8ArrayData)
com.eclipsesource.v8.debug.mirror.Frame: com.eclipsesource.v8.debug.mirror.FunctionMirror getFunction()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.eclipsesource.v8.V8: double executeDoubleScript(long,java.lang.String,java.lang.String,int)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
com.eclipsesource.v8.V8: java.lang.Object executeModule(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer clear()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Locker: java.lang.Thread getThread()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaVoidCallback,java.lang.String)
com.eclipsesource.v8.V8: int arrayGetIntegers(long,long,int,int,int[])
com.eclipsesource.v8.V8: double getDouble(long,long,java.lang.String)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
com.eclipsesource.v8.utils.V8Executor: boolean access$000(com.eclipsesource.v8.utils.V8Executor)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType valueOf(java.lang.String)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.eclipsesource.v8.V8: boolean _executeBooleanFunction(long,long,java.lang.String,long)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.eclipsesource.v8.V8: long initNewV8Int32Array(long,long,int,int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.eclipsesource.v8.V8: void checkScript(java.lang.String)
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: DebugHandler$DebugEvent(java.lang.String,int,int)
com.eclipsesource.v8.V8Array$Undefined: double getDouble(int)
androidx.window.core.Bounds: int hashCode()
com.eclipsesource.v8.debug.DebugHandler: void setupBreakpointHandler()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.eclipsesource.v8.V8: java.lang.Object arrayGet(long,int,long,int)
com.eclipsesource.v8.V8: boolean executeBooleanFunction(long,long,java.lang.String,long)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.eclipsesource.v8.V8: java.lang.String _getVersion()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.eclipsesource.v8.V8Array: int[] getIntegers(int,int)
com.eclipsesource.v8.debug.V8DebugServer: void sendMessage(java.lang.String,java.lang.String)
com.eclipsesource.v8.debug.mirror.BooleanMirror: boolean isBoolean()
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.eclipsesource.v8.debug.BreakEvent: int getSourceLine()
com.eclipsesource.v8.V8: void close()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getV8Result(com.eclipsesource.v8.V8,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.eclipsesource.v8.V8Object: double executeDoubleFunction(java.lang.String,com.eclipsesource.v8.V8Array)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.R$styleable: R$styleable()
com.eclipsesource.v8.V8: boolean[] arrayGetBooleans(long,long,int,int)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array push(boolean)
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
com.eclipsesource.v8.debug.V8DebugServer$EventHandler: void safeRelease(com.eclipsesource.v8.Releasable)
com.eclipsesource.v8.debug.V8DebugServer: java.nio.charset.Charset access$1100()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Array executeArrayFunction(java.lang.String,com.eclipsesource.v8.V8Array)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.eclipsesource.v8.V8: void acquireLock(long)
com.eclipsesource.v8.inspector.V8InspectorDelegate: void onResponse(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.eclipsesource.v8.V8: double _executeDoubleFunction(long,long,java.lang.String,long)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8 getRuntime()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object add(java.lang.String,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer flip()
com.eclipsesource.v8.NodeJS: boolean isRunning()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
com.eclipsesource.v8.utils.V8PropertyMap: java.util.Set entrySet()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.eclipsesource.v8.V8: void registerCallback(java.lang.Object,java.lang.reflect.Method,long,java.lang.String,boolean)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String getName()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
com.eclipsesource.v8.V8: void releaseNativeMethodDescriptors()
com.eclipsesource.v8.V8: void _releaseMethodDescriptor(long,long)
com.eclipsesource.v8.V8Array$Undefined: double[] getDoubles(int,int)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isArray(com.eclipsesource.v8.V8Object)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.eclipsesource.v8.debug.V8DebugServer: void configureV8ForDebugging()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer put(int,byte)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(com.eclipsesource.v8.V8Array,int,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.debug.mirror.Mirror: void release()
com.eclipsesource.v8.debug.V8DebugServer: void access$400(com.eclipsesource.v8.debug.V8DebugServer,com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.debug.V8DebugServer: void processRequests(long)
com.eclipsesource.v8.V8Object: int getInteger(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.eclipsesource.v8.V8RuntimeException: V8RuntimeException()
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String getLocalName(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
com.eclipsesource.v8.debug.mirror.Frame: java.lang.String getArgumentName(int)
com.eclipsesource.v8.utils.ArrayBuffer: ArrayBuffer(com.eclipsesource.v8.V8,java.nio.ByteBuffer)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: short getShort(int)
com.eclipsesource.v8.debug.CompileEvent: CompileEvent(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object setPrototype(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8Array$Undefined: int getBooleans(int,int,boolean[])
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.eclipsesource.v8.V8: int _getType(long,long,int)
com.eclipsesource.v8.V8: java.lang.String toString(long,long)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer put(java.nio.ByteBuffer)
com.eclipsesource.v8.V8ArrayBuffer: int remaining()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isUndefined(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.PlatformDetector: java.lang.String access$200(java.lang.String)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.eclipsesource.v8.debug.V8DebugServer: java.lang.Object access$700(com.eclipsesource.v8.debug.V8DebugServer)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.eclipsesource.v8.V8: int executeIntegerScript(long,java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putShort(short)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Value createTwin()
com.eclipsesource.v8.V8: void addNull(long,long,java.lang.String)
com.eclipsesource.v8.V8: boolean isRunning()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.eclipsesource.v8.V8Array: boolean getBoolean(int)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.eclipsesource.v8.utils.V8Map: void release()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.layout.FoldingFeature: boolean isSeparating()
com.eclipsesource.v8.V8: long _initNewV8UInt32Array(long,long,int,int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.eclipsesource.v8.V8: long _initNewV8UInt8Array(long,long,int,int)
com.eclipsesource.v8.V8ArrayBuffer: int capacity()
com.eclipsesource.v8.V8: void createNodeRuntime(java.lang.String)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.eclipsesource.v8.utils.V8Map: boolean isEmpty()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaCallback,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.eclipsesource.v8.V8ArrayBuffer: char getChar(int)
com.eclipsesource.v8.V8: void executeVoidFunction(long,long,java.lang.String,long)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.eclipsesource.v8.V8Value: V8Value(com.eclipsesource.v8.V8)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.eclipsesource.v8.V8: void registerVoidCallback(com.eclipsesource.v8.JavaVoidCallback,long,java.lang.String)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array pushNull()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array twin()
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.eclipsesource.v8.debug.mirror.Mirror: com.eclipsesource.v8.debug.mirror.ValueMirror createMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.debug.DebugHandler: void changeBreakPointCondition(int,java.lang.String)
com.eclipsesource.v8.V8: void _acquireLock(long)
com.eclipsesource.v8.debug.BreakHandler: void onBreak(com.eclipsesource.v8.debug.DebugHandler$DebugEvent,com.eclipsesource.v8.debug.ExecutionState,com.eclipsesource.v8.debug.EventData,com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.LibraryLoader: boolean extract(java.lang.String,boolean,java.lang.StringBuffer)
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.eclipsesource.v8.V8: void addReferenceHandler(com.eclipsesource.v8.ReferenceHandler)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putFloat(float)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
com.eclipsesource.v8.V8: boolean executeBooleanScript(java.lang.String)
com.eclipsesource.v8.V8: void release()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.eclipsesource.v8.V8ArrayBuffer: byte get()
com.eclipsesource.v8.debug.mirror.BooleanMirror: BooleanMirror(com.eclipsesource.v8.V8Object)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.eclipsesource.v8.V8: long getObjectReferenceCount()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.java.R: R()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8 getRuntime()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.eclipsesource.v8.V8: boolean isNodeCompatible()
com.eclipsesource.v8.debug.mirror.BooleanMirror: java.lang.String toString()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.eclipsesource.v8.V8Array$Undefined: int getType(int)
com.eclipsesource.v8.V8: void _addNull(long,long,java.lang.String)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
com.eclipsesource.v8.utils.V8PropertyMap: java.util.Set keySet()
com.eclipsesource.v8.V8: void schedulePauseOnNextStatement(long,java.lang.String)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.eclipsesource.v8.V8Array$Undefined: int hashCode()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.eclipsesource.v8.V8: boolean pumpMessageLoop()
com.eclipsesource.v8.V8: long initNewV8UInt8ClampedArray(long,long,int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.eclipsesource.v8.debug.DebugHandler: void release()
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(java.lang.Object)
com.eclipsesource.v8.debug.EventData: void release()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.eclipsesource.v8.V8: long _initNewV8Object(long)
com.eclipsesource.v8.V8ArrayBuffer: boolean isDirect()
com.eclipsesource.v8.utils.MemoryManager: MemoryManager(com.eclipsesource.v8.V8)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putChar(int,char)
com.eclipsesource.v8.debug.V8DebugServer: java.util.List access$1200(com.eclipsesource.v8.debug.V8DebugServer)
com.eclipsesource.v8.debug.mirror.UndefinedMirror: boolean isUndefined()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8Array toV8Array(com.eclipsesource.v8.V8,java.util.List)
com.eclipsesource.v8.V8Function: void initialize(long,java.lang.Object)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8Array: java.lang.String getString(int)
androidx.window.core.Bounds: boolean isZero()
androidx.window.core.Bounds: int getWidth()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.eclipsesource.v8.inspector.V8Inspector: void removeDebuggerConnectionListener(com.eclipsesource.v8.inspector.DebuggerConnectionListener)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.eclipsesource.v8.V8: long _initNewV8Float64Array(long,long,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.eclipsesource.v8.V8: void _setFlags(java.lang.String)
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.NodeJS createNodeJS()
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler: void v8HandleDisposed(com.eclipsesource.v8.V8Value)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.eclipsesource.v8.V8Function: com.eclipsesource.v8.V8Value createTwin()
com.eclipsesource.v8.V8Array: V8Array(com.eclipsesource.v8.V8)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
com.eclipsesource.v8.V8: void clearWeak(long,long)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.eclipsesource.v8.V8: void lowMemoryNotification(long)
com.eclipsesource.v8.debug.mirror.ValueMirror: boolean isValue()
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
com.eclipsesource.v8.debug.DebugHandler: void clearBreakPoint(int)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object registerJavaMethod(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class[],boolean)
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.NodeJS createNodeJS(java.io.File)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.eclipsesource.v8.V8: int arrayGetBooleans(long,long,int,int,boolean[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.eclipsesource.v8.utils.ConcurrentV8: com.eclipsesource.v8.V8 getV8()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.eclipsesource.v8.debug.ExecutionState: int getFrameCount()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.eclipsesource.v8.V8: void _addObject(long,long,java.lang.String,long)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.eclipsesource.v8.V8: java.lang.Object executeFunction(long,long,long,long)
com.eclipsesource.v8.V8Array$Undefined: java.lang.String executeStringFunction(java.lang.String,com.eclipsesource.v8.V8Array)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaCallback,java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
com.eclipsesource.v8.utils.V8ObjectUtils: void pushValue(com.eclipsesource.v8.V8,com.eclipsesource.v8.V8Array,java.lang.Object,java.util.Map)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
com.eclipsesource.v8.ReferenceHandler: void v8HandleDisposed(com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.debug.mirror.PropertiesArray: PropertiesArray(com.eclipsesource.v8.V8Array)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: byte[] array()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.eclipsesource.v8.V8: void weakReferenceReleased(long)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8 createV8Runtime()
com.eclipsesource.v8.V8Object: java.lang.Object get(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.embedding.ActivityStack: int hashCode()
com.eclipsesource.v8.V8: void _addArrayDoubleItem(long,long,double)
com.eclipsesource.v8.V8Object$Undefined: java.lang.Object executeJSFunction(java.lang.String,java.lang.Object[])
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8: long _initNewV8UInt16Array(long,long,int,int)
com.eclipsesource.v8.V8Value: java.lang.String getStringRepresentation(int)
com.eclipsesource.v8.V8Object: V8Object()
com.eclipsesource.v8.V8: boolean isLoaded()
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int access$300(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.eclipsesource.v8.utils.V8Runnable: void run(com.eclipsesource.v8.V8)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer mark()
com.eclipsesource.v8.V8Object$Undefined: int getInteger(java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.eclipsesource.v8.V8: long initNewV8Object(long)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object addUndefined(java.lang.String)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object add(java.lang.String,double)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object getObject(int)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.eclipsesource.v8.V8: int executeIntegerScript(java.lang.String)
com.eclipsesource.v8.V8: java.lang.Object _executeFunction(long,long,long,long)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer put(byte[])
com.eclipsesource.v8.V8: byte _arrayGetByte(long,long,int)
com.eclipsesource.v8.V8Array: int getStrings(int,int,java.lang.String[])
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.List toList(com.eclipsesource.v8.V8Array)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
com.eclipsesource.v8.debug.mirror.FunctionMirror: java.lang.String getName()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.eclipsesource.v8.debug.DebugHandler: java.util.List access$100(com.eclipsesource.v8.debug.DebugHandler)
com.eclipsesource.v8.debug.mirror.ValueMirror: java.lang.Object getValue()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
com.eclipsesource.v8.V8ScriptException: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
com.eclipsesource.v8.V8ArrayBuffer: void initialize(long,java.lang.Object)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.eclipsesource.v8.V8ScriptException: int getLineNumber()
com.eclipsesource.v8.V8: java.lang.Object executeScript(long,int,java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isValue()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
com.eclipsesource.v8.utils.V8ObjectUtils$ListWrapper: V8ObjectUtils$ListWrapper(java.util.List)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.debug.BreakEvent: BreakEvent(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8Array$Undefined: int getInteger(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array pushUndefined()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: void run()
com.eclipsesource.v8.debug.DebugHandler: int getScriptBreakPointCount()
com.eclipsesource.v8.V8Array$Undefined: void executeVoidFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8ArrayBuffer: int arrayOffset()
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: ObjectMirror$PropertyKind(java.lang.String,int,int)
com.eclipsesource.v8.utils.V8PropertyMap: V8PropertyMap()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.eclipsesource.v8.V8: void populateParamters(com.eclipsesource.v8.V8Array,int,java.lang.Object[],java.util.List,boolean)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
com.eclipsesource.v8.V8Value: void checkReleased()
com.eclipsesource.v8.utils.V8Executor$ExecutorTermination: V8Executor$ExecutorTermination(com.eclipsesource.v8.utils.V8Executor)
com.eclipsesource.v8.V8: java.lang.Object executeFunction(long,int,long,java.lang.String,long)
com.eclipsesource.v8.V8: void lowMemoryNotification()
com.eclipsesource.v8.V8: void addArrayNullItem(long,long)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isFunction()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.eclipsesource.v8.LibraryLoader: java.lang.String computeLibraryFullName(boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.eclipsesource.v8.V8: void releaseResources()
com.eclipsesource.v8.debug.mirror.StringMirror: StringMirror(com.eclipsesource.v8.V8Object)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
com.eclipsesource.v8.debug.ExecutionState: ExecutionState(com.eclipsesource.v8.V8Object)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8Value twin()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.debug.V8DebugServer: void sendJson(java.lang.String)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.window.core.Bounds: int getRight()
com.eclipsesource.v8.V8Object$Undefined: java.lang.String toString()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.eclipsesource.v8.V8: java.lang.String _getString(long,long,java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.eclipsesource.v8.ReferenceHandler: void v8HandleCreated(com.eclipsesource.v8.V8Value)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler: void v8HandleCreated(com.eclipsesource.v8.V8Value)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
com.eclipsesource.v8.debug.mirror.Scope: void setVariableValue(java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Array executeArrayScript(java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.eclipsesource.v8.V8: boolean _contains(long,long,java.lang.String)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
com.eclipsesource.v8.V8Object: boolean getBoolean(java.lang.String)
androidx.window.embedding.SplitRule: int hashCode()
com.eclipsesource.v8.debug.DebugHandler: com.eclipsesource.v8.debug.ScriptBreakPoint getScriptBreakPoint(int)
com.eclipsesource.v8.V8: java.lang.Object _executeScript(long,int,java.lang.String,java.lang.String,int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
com.eclipsesource.v8.V8: byte[] _arrayGetBytes(long,long,int,int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.debug.V8DebugServer: void setTraceCommunication(boolean)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent[] values()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.eclipsesource.v8.utils.V8Map: java.util.Collection values()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.eclipsesource.v8.debug.mirror.FunctionMirror: boolean isFunction()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object twin()
com.eclipsesource.v8.debug.mirror.Scope: void setVariableValue(java.lang.String,boolean)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.eclipsesource.v8.NodeJS: void safeRelease(com.eclipsesource.v8.Releasable)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object executeObjectFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8: int _arrayGetBooleans(long,long,int,int,boolean[])
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer twin()
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.Map toMap(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.V8: com.eclipsesource.v8.utils.V8Executor getExecutor(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: java.lang.Object getDefaultValue(java.lang.Class)
com.eclipsesource.v8.V8: boolean _sameValue(long,long,long)
com.eclipsesource.v8.V8: void _addArrayObjectItem(long,long,long)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer get(byte[])
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.eclipsesource.v8.V8: void executeVoidScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.debug.mirror.Frame: com.eclipsesource.v8.debug.mirror.ValueMirror getLocalValue(int)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.eclipsesource.v8.V8ArrayBuffer: V8ArrayBuffer(com.eclipsesource.v8.V8,int)
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8TypedArray toV8TypedArray(com.eclipsesource.v8.V8,com.eclipsesource.v8.utils.TypedArray,java.util.Map)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
com.eclipsesource.v8.V8Object$Undefined: double getDouble(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Value twin()
com.eclipsesource.v8.PlatformDetector$Arch: PlatformDetector$Arch()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
com.eclipsesource.v8.utils.MemoryManager: void persist(com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.V8: void _schedulePauseOnNextStatement(long,long,java.lang.String)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array pushUndefined()
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.List toList(com.eclipsesource.v8.V8Array,com.eclipsesource.v8.utils.V8Map,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.V8Object: V8Object(com.eclipsesource.v8.V8,java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.eclipsesource.v8.utils.MemoryManager: void checkReleased()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.eclipsesource.v8.PlatformDetector$OS: boolean isMac()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
com.eclipsesource.v8.utils.V8Map: java.lang.Object remove(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.eclipsesource.v8.V8Array: int getType()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
com.eclipsesource.v8.debug.V8DebugServer: boolean access$200(com.eclipsesource.v8.debug.V8DebugServer)
com.eclipsesource.v8.debug.mirror.ObjectMirror: java.lang.String toString()
com.eclipsesource.v8.V8: double executeDoubleScript(java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.eclipsesource.v8.debug.V8DebugServer: void setupEventHandler()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.eclipsesource.v8.V8Array$Undefined: double executeDoubleFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8: void _createTwin(long,long,long)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
com.eclipsesource.v8.utils.V8Executor: boolean isTerminating()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isString(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: V8()
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Object executeObjectScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.debug.ScriptBreakPoint: void release()
com.eclipsesource.v8.utils.V8Map: java.lang.Object get(java.lang.Object)
com.eclipsesource.v8.debug.mirror.Mirror: int hashCode()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
com.eclipsesource.v8.V8Value: void release()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.eclipsesource.v8.V8ArrayBuffer: byte get(int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.eclipsesource.v8.V8: double executeDoubleFunction(long,long,java.lang.String,long)
com.eclipsesource.v8.utils.TypedArray: com.eclipsesource.v8.V8TypedArray getV8TypedArray()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.eclipsesource.v8.V8Array$Undefined: double getDouble(java.lang.String)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.window.core.Version: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8ArrayBuffer: boolean hasArray()
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Array$Undefined: boolean contains(java.lang.String)
com.eclipsesource.v8.V8Object$Undefined: boolean contains(java.lang.String)
com.eclipsesource.v8.V8ResultUndefined: V8ResultUndefined()
com.eclipsesource.v8.V8Array$Undefined: java.lang.Object get(int)
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: void processClientRequests()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.eclipsesource.v8.V8: boolean equals(long,long,long)
com.eclipsesource.v8.utils.V8PropertyMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.window.embedding.SplitController: void clearRegisteredRules()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object setPrototype(com.eclipsesource.v8.V8Object)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.eclipsesource.v8.debug.V8DebugServer: byte[] access$1300()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.eclipsesource.v8.V8: long initNewV8ArrayBuffer(long,int)
com.eclipsesource.v8.V8: void callVoidJavaMethod(long,com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.eclipsesource.v8.PlatformDetector$OS: boolean isWindows()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.eclipsesource.v8.PlatformDetector$OS: boolean isLinux()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer reset()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.eclipsesource.v8.V8Array$Undefined: V8Array$Undefined()
com.eclipsesource.v8.debug.ScriptBreakPoint: ScriptBreakPoint(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isObject(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: java.lang.String executeStringScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8: void addObject(long,long,java.lang.String,long)
com.eclipsesource.v8.utils.TypedArray: boolean isAvailable()
com.eclipsesource.v8.V8: double arrayGetDouble(long,long,int)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Array getArray(java.lang.String)
com.eclipsesource.v8.V8: java.lang.String _executeStringFunction(long,long,java.lang.String,long)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
com.eclipsesource.v8.V8: boolean isWeak(long,long)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: com.eclipsesource.v8.debug.EventData createDebugEvent(com.eclipsesource.v8.debug.DebugHandler$DebugEvent,com.eclipsesource.v8.V8Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.eclipsesource.v8.V8: java.lang.Object checkResult(java.lang.Object)
com.eclipsesource.v8.debug.mirror.PropertyMirror: PropertyMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8TypedArray: void checkOffset(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.JavaVoidCallback: void invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.LibraryLoader: void loadLibrary(java.lang.String)
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8: boolean strictEquals(long,long,long)
com.eclipsesource.v8.PlatformDetector$OS: boolean isAndroid()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
com.eclipsesource.v8.PlatformDetector: java.lang.String access$000(java.lang.String)
com.eclipsesource.v8.V8: int arrayGetStrings(long,long,int,int,java.lang.String[])
androidx.window.core.Bounds: int getBottom()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
com.eclipsesource.v8.V8Array: byte[] getBytes(int,int)
com.eclipsesource.v8.V8: void _addArrayUndefinedItem(long,long)
com.eclipsesource.v8.V8ScriptException: java.lang.String getMessage()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object setPrototype(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.Map toMap(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Locker getLocker()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.eclipsesource.v8.utils.V8Thread: V8Thread(com.eclipsesource.v8.utils.V8Runnable)
com.eclipsesource.v8.utils.V8Executor: void shutdown()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isBoolean()
com.eclipsesource.v8.V8ArrayBuffer: boolean hasRemaining()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8Value createTwin()
com.eclipsesource.v8.V8: long _registerJavaMethod(long,long,java.lang.String,boolean)
com.eclipsesource.v8.V8Array: double[] getDoubles(int,int)
com.eclipsesource.v8.PlatformDetector: java.lang.String normalizeArch(java.lang.String)
com.eclipsesource.v8.V8: void disposeMethodID(long)
androidx.window.R$attr: R$attr()
com.eclipsesource.v8.utils.ConcurrentV8$1: ConcurrentV8$1(com.eclipsesource.v8.utils.ConcurrentV8)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
com.eclipsesource.v8.V8: void _clearWeak(long,long)
androidx.window.embedding.SplitController: SplitController()
com.eclipsesource.v8.V8: java.lang.Object callObjectJavaMethod(long,com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array getArray(int)
com.eclipsesource.v8.V8Array$Undefined: int getIntegers(int,int,int[])
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.eclipsesource.v8.V8: void setData(java.lang.String,java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.eclipsesource.v8.V8: int[] _arrayGetIntegers(long,long,int,int)
com.eclipsesource.v8.V8Object$Undefined: double executeDoubleFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.utils.V8Executor: boolean hasTerminated()
com.eclipsesource.v8.utils.V8Map: boolean containsKey(java.lang.Object)
com.eclipsesource.v8.utils.V8Map: java.lang.Object put(java.lang.Object,java.lang.Object)
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8Value setWeak()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isNull()
com.eclipsesource.v8.V8Object$Undefined: boolean isUndefined()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.eclipsesource.v8.V8: void _addArrayIntItem(long,long,int)
com.eclipsesource.v8.V8: int _executeIntegerFunction(long,long,java.lang.String,long)
androidx.window.core.Version: int hashCode()
com.eclipsesource.v8.debug.mirror.Scope: void setVariableValue(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Value twin()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.eclipsesource.v8.V8: java.lang.String getV8Version()
com.eclipsesource.v8.V8: void _addArrayBooleanItem(long,long,boolean)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.eclipsesource.v8.V8Object: V8Object(com.eclipsesource.v8.V8)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
com.eclipsesource.v8.V8: boolean executeBooleanScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8TypedArray: com.eclipsesource.v8.V8ArrayBuffer getBuffer()
com.eclipsesource.v8.V8: void _add(long,long,java.lang.String,double)
com.eclipsesource.v8.V8: void setFlags(java.lang.String)
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8ArrayBuffer toV8ArrayBuffer(com.eclipsesource.v8.V8,com.eclipsesource.v8.utils.ArrayBuffer,java.util.Map)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array getArray(java.lang.String)
androidx.window.embedding.SplitPairFilter: int hashCode()
com.eclipsesource.v8.debug.DebugHandler: void removeBreakHandler(com.eclipsesource.v8.debug.BreakHandler)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
com.eclipsesource.v8.debug.V8DebugServer: int getPort()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
kotlin.jvm.internal.FunctionReference: int getArity()
com.eclipsesource.v8.V8: java.lang.Object getData(java.lang.String)
com.eclipsesource.v8.debug.ExecutionState: void close()
com.eclipsesource.v8.V8Object$Undefined: boolean equals(java.lang.Object)
com.eclipsesource.v8.utils.V8PropertyMap: boolean containsValue(java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8: int _getArrayType(long,long)
com.eclipsesource.v8.V8Value: void addObjectReference(long)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8Value twin()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isFrame()
com.eclipsesource.v8.V8Array: int getDoubles(int,int,double[])
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.eclipsesource.v8.debug.V8DebugServer: void stop()
com.eclipsesource.v8.V8: void notifyReferenceDisposed(com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putLong(long)
com.eclipsesource.v8.V8Array: boolean[] getBooleans(int,int)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.window.embedding.SplitPairRule: int hashCode()
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
com.eclipsesource.v8.V8Object$Undefined: java.lang.String[] getKeys()
com.eclipsesource.v8.V8ArrayBuffer: char getChar()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: void startHandshake()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.eclipsesource.v8.utils.SingleTypeAdapter: SingleTypeAdapter(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.window.core.Bounds: boolean isEmpty()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.eclipsesource.v8.debug.DebugHandler: void disableAllBreakPoints()
androidx.window.core.Version: int getMajor()
com.eclipsesource.v8.V8Object: java.lang.String getString(java.lang.String)
com.eclipsesource.v8.utils.V8Map: void clear()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.eclipsesource.v8.V8ArrayBuffer: boolean isReadOnly()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.utils.V8Map: boolean containsValue(java.lang.Object)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(java.lang.Object,int,com.eclipsesource.v8.utils.V8Map,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.PlatformDetector: java.lang.String normalizeOs(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
com.eclipsesource.v8.V8ScriptException: java.lang.String getSourceLine()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.eclipsesource.v8.debug.mirror.SourceLocation: java.lang.String getScriptName()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.eclipsesource.v8.inspector.V8Inspector: V8Inspector(com.eclipsesource.v8.V8,com.eclipsesource.v8.inspector.V8InspectorDelegate,java.lang.String)
com.eclipsesource.v8.utils.V8Map: java.util.Set keySet()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.eclipsesource.v8.PlatformDetector: java.lang.String normalizeOsReleaseValue(java.lang.String)
androidx.window.embedding.SplitInfo: int hashCode()
com.eclipsesource.v8.V8Object$Undefined: V8Object$Undefined()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.eclipsesource.v8.V8Array$Undefined: boolean getBoolean(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.eclipsesource.v8.V8ArrayBuffer: int position()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object executeObjectFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.debug.mirror.Frame: Frame(com.eclipsesource.v8.V8Object)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
com.eclipsesource.v8.V8: V8(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: com.eclipsesource.v8.debug.mirror.Scope$ScopeType[] values()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putDouble(double)
com.google.firebase.storage.StorageRegistrar: StorageRegistrar()
com.eclipsesource.v8.NodeJS$2: NodeJS$2(com.eclipsesource.v8.NodeJS,java.io.File)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
com.eclipsesource.v8.V8: void _lowMemoryNotification(long)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
com.eclipsesource.v8.V8: long initNewV8UInt8Array(long,long,int,int)
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType[] values()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Value getUndefined()
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isProperty()
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(double)
com.wuba.fair.logger.Console: void error(java.lang.Object[])
com.eclipsesource.v8.debug.StepAction: com.eclipsesource.v8.debug.StepAction valueOf(java.lang.String)
com.eclipsesource.v8.utils.V8Executor: boolean hasException()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
kotlin.jvm.internal.Lambda: int getArity()
com.google.firebase.storage.StorageRegistrar: java.util.List getComponents()
com.eclipsesource.v8.PlatformDetector$OS: PlatformDetector$OS()
com.eclipsesource.v8.V8Array: int getBooleans(int,int,boolean[])
com.eclipsesource.v8.V8$MethodDescriptor: V8$MethodDescriptor(com.eclipsesource.v8.V8,com.eclipsesource.v8.V8$1)
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
com.eclipsesource.v8.V8: int executeIntegerFunction(long,long,java.lang.String,long)
com.eclipsesource.v8.inspector.V8Inspector: void verifyDebuggerConnection(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
androidx.window.core.Bounds: int getLeft()
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
com.eclipsesource.v8.V8: void _addUndefined(long,long,java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.eclipsesource.v8.V8ArrayBuffer: double getDouble(int)
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: int indexOf(byte[],byte[],int,int)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
com.eclipsesource.v8.V8: java.lang.String getConstructorName(long,long)
com.eclipsesource.v8.utils.V8ObjectUtils: void setValue(com.eclipsesource.v8.V8,com.eclipsesource.v8.V8Object,java.lang.String,java.lang.Object,java.util.Map)
com.eclipsesource.v8.V8Object: boolean executeBooleanFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Value: boolean isWeak()
com.eclipsesource.v8.PlatformDetector: java.lang.String access$300(java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Object getObject(int)
com.eclipsesource.v8.V8: long initNewV8Int8Array(long,long,int,int)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(com.eclipsesource.v8.V8Array,int)
com.eclipsesource.v8.V8ScriptException: V8ScriptException(java.lang.String,int,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.Throwable)
com.eclipsesource.v8.V8: void setWeak(long,long)
com.eclipsesource.v8.V8ArrayBuffer: int getInt(int)
com.eclipsesource.v8.V8Locker: V8Locker(com.eclipsesource.v8.V8)
com.eclipsesource.v8.debug.mirror.ArrayMirror: ArrayMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer order(java.nio.ByteOrder)
com.eclipsesource.v8.inspector.DebuggerConnectionListener: void onDebuggerConnected()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.eclipsesource.v8.utils.V8Executor$ExecutorTermination: void invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object twin()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.eclipsesource.v8.V8: long createInspector(com.eclipsesource.v8.inspector.V8InspectorDelegate,java.lang.String)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.eclipsesource.v8.V8: long initNewV8Array(long)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isNumber(com.eclipsesource.v8.V8Object)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
com.eclipsesource.v8.V8: int _identityHash(long,long)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isFunction(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8 createV8Runtime(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.eclipsesource.v8.V8: long[] _initNewV8Function(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.utils.MemoryManager: boolean isReleased()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer limit(int)
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.eclipsesource.v8.V8: int _arrayGetInteger(long,long,int)
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String getLinuxOsReleaseId()
com.eclipsesource.v8.utils.SingleTypeAdapter: java.lang.Object adapt(int,java.lang.Object)
com.eclipsesource.v8.V8: void createTwin(long,long,long)
com.eclipsesource.v8.V8: com.eclipsesource.v8.utils.V8Executor removeExecutor(com.eclipsesource.v8.V8Object)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.eclipsesource.v8.V8: java.lang.String executeStringFunction(long,long,java.lang.String,long)
com.eclipsesource.v8.Releasable: void close()
com.eclipsesource.v8.V8Array$Undefined: void release()
com.eclipsesource.v8.V8TypedArray: V8TypedArray(com.eclipsesource.v8.V8,com.eclipsesource.v8.V8ArrayBuffer,int,int,int)
com.eclipsesource.v8.V8Value: java.lang.String getStringRepresentaion(int)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer position(int)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
com.eclipsesource.v8.V8TypedArray$V8ArrayData: com.eclipsesource.v8.V8ArrayBuffer access$100(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
com.eclipsesource.v8.utils.V8PropertyMap: java.lang.Object put(java.lang.String,java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.eclipsesource.v8.NodeJS: void release()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.eclipsesource.v8.debug.V8DebugServer: void enterBreakLoop(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: void addArrayStringItem(long,long,java.lang.String)
com.eclipsesource.v8.debug.mirror.SourceLocation: int getLine()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.eclipsesource.v8.debug.mirror.Scope$ScopeType: Scope$ScopeType(java.lang.String,int,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
com.eclipsesource.v8.utils.V8PropertyMap: void putAll(java.util.Map)
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8Function createScriptExecutionCallback(java.io.File)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.eclipsesource.v8.utils.V8PropertyMap: boolean isEmpty()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.eclipsesource.v8.V8: void _releaseLock(long)
com.eclipsesource.v8.V8Array: double getDouble(int)
com.eclipsesource.v8.V8: void add(long,long,java.lang.String,boolean)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object$Undefined twin()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.eclipsesource.v8.utils.V8Map: int size()
com.eclipsesource.v8.debug.mirror.Scope: void setVariableValue(java.lang.String,com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.utils.V8PropertyMap: void clear()
com.eclipsesource.v8.V8: void executeVoidScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8: void _release(long,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8 getRuntime()
com.eclipsesource.v8.V8: long initNewV8Float64Array(long,long,int,int)
com.eclipsesource.v8.V8Array: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8: void createAndRegisterMethodDescriptor(com.eclipsesource.v8.JavaCallback,long)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.core.Bounds: int getHeight()
com.eclipsesource.v8.utils.V8ObjectUtils$ListWrapper: int hashCode()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: byte[] join(byte[],byte[],int,int)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
com.eclipsesource.v8.debug.mirror.SourceLocation: java.lang.String getSourceText()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
com.eclipsesource.v8.debug.EventData: EventData(com.eclipsesource.v8.V8Object)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
com.eclipsesource.v8.NodeJS: void access$000(com.eclipsesource.v8.NodeJS,com.eclipsesource.v8.V8Function)
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.eclipsesource.v8.V8: void checkThread()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.eclipsesource.v8.debug.mirror.Frame: int getArgumentCount()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class[],boolean)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.eclipsesource.v8.V8Array$Undefined: int getType()
com.eclipsesource.v8.debug.mirror.StringMirror: java.lang.String toString()
com.eclipsesource.v8.debug.mirror.UndefinedMirror: java.lang.String toString()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.eclipsesource.v8.V8: void _startNodeJS(long,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array push(int)
com.eclipsesource.v8.V8: void removeReleaseHandler(com.eclipsesource.v8.utils.V8Runnable)
com.eclipsesource.v8.V8Object: int getType(java.lang.String)
com.eclipsesource.v8.debug.V8DebugServer$EventHandler: void invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.debug.mirror.Frame: int getLocalCount()
androidx.window.core.Bounds: int getTop()
com.eclipsesource.v8.utils.V8Map: java.lang.Object put(com.eclipsesource.v8.V8Value,java.lang.Object)
com.eclipsesource.v8.utils.TypedArray: TypedArray(com.eclipsesource.v8.V8,com.eclipsesource.v8.utils.ArrayBuffer,int,int,int)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.eclipsesource.v8.V8: int getType(long,long)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putInt(int)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.eclipsesource.v8.V8: long getV8RuntimePtr()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.eclipsesource.v8.utils.V8PropertyMap: int size()
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.eclipsesource.v8.V8: void _executeVoidFunction(long,long,java.lang.String,long)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array twin()
com.eclipsesource.v8.V8Object$Undefined: java.lang.Object executeFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putShort(int,short)
com.eclipsesource.v8.LibraryLoader: boolean extract(java.lang.String,java.lang.String,java.lang.StringBuffer)
com.eclipsesource.v8.debug.V8DebugServer: void processRequest(java.lang.String)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.debug.StepAction: StepAction(java.lang.String,int,int)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
com.eclipsesource.v8.V8Object: java.lang.Object executeJSFunction(java.lang.String,java.lang.Object[])
com.eclipsesource.v8.debug.mirror.ObjectMirror: boolean isObject()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.eclipsesource.v8.V8: void _executeVoidScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.debug.DebugHandler: void disableScriptBreakPoint(int)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.eclipsesource.v8.V8Locker: boolean tryAcquire()
com.eclipsesource.v8.V8ArrayBuffer: java.nio.ByteOrder order()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object getObject(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.eclipsesource.v8.V8: void _dispatchProtocolMessage(long,long,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.eclipsesource.v8.debug.mirror.ObjectMirror: java.lang.String[] getPropertyNames(com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.eclipsesource.v8.debug.ExecutionState: void prepareStep(com.eclipsesource.v8.debug.StepAction)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
com.eclipsesource.v8.V8: int _arrayGetIntegers(long,long,int,int,int[])
com.eclipsesource.v8.debug.mirror.Mirror: boolean isBoolean(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.utils.V8Map: java.util.Set entrySet()
com.eclipsesource.v8.utils.V8Map: void putAll(java.util.Map)
com.eclipsesource.v8.V8: void registerCallback(com.eclipsesource.v8.JavaCallback,long,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
com.eclipsesource.v8.V8Array: java.lang.String[] getStrings(int,int)
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: DebugHandler$BreakpointHandler(com.eclipsesource.v8.debug.DebugHandler,com.eclipsesource.v8.debug.DebugHandler$1)
com.eclipsesource.v8.V8: boolean _pumpMessageLoop(long)
com.eclipsesource.v8.debug.ExceptionEvent: ExceptionEvent(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putDouble(int,double)
com.eclipsesource.v8.V8: void addArrayUndefinedItem(long,long)
com.eclipsesource.v8.V8: void terminateExecution(long)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.eclipsesource.v8.utils.V8ObjectUtils: java.util.List toList(com.eclipsesource.v8.V8Array,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.V8: java.lang.Object[] setDefaultValues(java.lang.Object[],java.lang.Class[],com.eclipsesource.v8.V8Object,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8: void _releaseRuntime(long)
com.eclipsesource.v8.LibraryLoader: boolean tryLoad(boolean,java.lang.StringBuffer)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getTypedArray(com.eclipsesource.v8.V8Array,int,java.lang.Object)
com.eclipsesource.v8.Platform: Platform()
com.google.firebase.storage.StorageRegistrar: com.google.firebase.storage.FirebaseStorageComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.eclipsesource.v8.V8: long _initNewV8Int32Array(long,long,int,int)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object addUndefined(java.lang.String)
com.eclipsesource.v8.debug.mirror.SourceLocation: int getPosition()
com.eclipsesource.v8.V8: void load(java.lang.String)
com.eclipsesource.v8.V8ArrayBuffer: int floatLimit()
com.eclipsesource.v8.debug.mirror.Scope: Scope(com.eclipsesource.v8.V8Object)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8Value createTwin()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.V8ScriptExecutionException: V8ScriptExecutionException(java.lang.String,int,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.Throwable)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(java.lang.String)
androidx.window.embedding.SplitRule: int getMinWidth()
com.eclipsesource.v8.V8Array: int getBytes(int,int,byte[])
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Object twin()
com.eclipsesource.v8.V8: void _add(long,long,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.eclipsesource.v8.utils.MemoryManager: int getObjectReferenceCount()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.eclipsesource.v8.V8: long registerJavaMethod(long,long,java.lang.String,boolean)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
com.eclipsesource.v8.V8Object$Undefined: int getType(java.lang.String)
com.eclipsesource.v8.V8: int getActiveRuntimes()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.eclipsesource.v8.PlatformDetector$OS: java.lang.String getName()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
com.eclipsesource.v8.debug.ExecutionState: void release()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.eclipsesource.v8.V8: long _initNewV8ArrayBuffer(long,java.nio.ByteBuffer,int)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.eclipsesource.v8.debug.DebugHandler: void close()
com.eclipsesource.v8.utils.V8Executor: void setup(com.eclipsesource.v8.V8)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind valueOf(java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isUndefined()
com.eclipsesource.v8.V8: java.lang.String getString(long,long,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.eclipsesource.v8.V8: void releaseMethodDescriptor(long,long)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Array executeArrayScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8Object: java.lang.Object executeFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Object: java.lang.String executeStringFunction(java.lang.String,com.eclipsesource.v8.V8Array)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.eclipsesource.v8.V8Array$Undefined: int[] getIntegers(int,int)
com.eclipsesource.v8.V8Object$Undefined: void close()
com.eclipsesource.v8.V8: void addArrayObjectItem(long,long,long)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.window.core.Bounds: Bounds(int,int,int,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
com.eclipsesource.v8.V8Array$Undefined: int executeIntegerFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Object$Undefined: int executeIntegerFunction(java.lang.String,com.eclipsesource.v8.V8Array)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.eclipsesource.v8.V8: boolean sameValue(long,long,long)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object addUndefined(java.lang.String)
com.eclipsesource.v8.V8ScriptExecutionException: V8ScriptExecutionException(java.lang.String,int,java.lang.String,java.lang.String,int,int,java.lang.String)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.wuba.fair.channel.FairFfi: void init(com.wuba.fair.channel.FairFfi)
com.eclipsesource.v8.V8: double executeDoubleScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: int readContentLength(byte[],int)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
com.eclipsesource.v8.V8ArrayBuffer: int getInt()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.eclipsesource.v8.V8Array$Undefined: boolean isUndefined()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8Object toV8Object(com.eclipsesource.v8.V8,java.util.Map,java.util.Map)
com.eclipsesource.v8.V8: void checkNativeLibraryLoaded()
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(boolean)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object add(java.lang.String,boolean)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.eclipsesource.v8.V8Array$Undefined: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Value: int getV8Type()
com.eclipsesource.v8.utils.V8Map: V8Map()
com.eclipsesource.v8.debug.mirror.NumberMirror: java.lang.String toString()
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8Array toV8Array(com.eclipsesource.v8.V8,java.util.List,java.util.Map)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
com.eclipsesource.v8.debug.ScriptBreakPoint: int getLine()
com.eclipsesource.v8.V8: long getBuildID()
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Function: java.lang.Object call(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Array$Undefined: java.lang.String getString(java.lang.String)
com.eclipsesource.v8.V8: void addArrayBooleanItem(long,long,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array push(com.eclipsesource.v8.V8Value)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.eclipsesource.v8.V8Array$Undefined: int getType(java.lang.String)
com.eclipsesource.v8.V8Object: void executeVoidFunction(java.lang.String,com.eclipsesource.v8.V8Array)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.eclipsesource.v8.debug.DebugHandler: void enableScriptBreakPoint(int)
com.eclipsesource.v8.V8: boolean getBoolean(long,long,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(com.eclipsesource.v8.V8Object,java.lang.String,com.eclipsesource.v8.utils.TypeAdapter)
com.eclipsesource.v8.debug.V8DebugServer: void access$1000(com.eclipsesource.v8.debug.V8DebugServer,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8Value: boolean jsEquals(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
kotlin.jvm.internal.CallableReference: CallableReference()
com.eclipsesource.v8.V8TypedArray: void initialize(long,java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
com.eclipsesource.v8.utils.MemoryManager: java.util.ArrayList access$100(com.eclipsesource.v8.utils.MemoryManager)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String parseLinuxRedhatReleaseFile(java.io.File)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.eclipsesource.v8.utils.V8Executor: void postMessage(java.lang.String[])
com.eclipsesource.v8.V8: long initNewV8ArrayBuffer(long,java.nio.ByteBuffer,int)
com.eclipsesource.v8.V8: void add(long,long,java.lang.String,int)
com.eclipsesource.v8.LibraryLoader: LibraryLoader()
com.eclipsesource.v8.debug.V8DebugServer$EventHandler: V8DebugServer$EventHandler(com.eclipsesource.v8.debug.V8DebugServer)
com.eclipsesource.v8.V8Object: double getDouble(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.eclipsesource.v8.V8Value: V8Value()
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object addNull(java.lang.String)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8: void dispatchProtocolMessage(long,java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.eclipsesource.v8.V8: long[] initNewV8Function(long)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.eclipsesource.v8.V8: int identityHash(long,long)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.eclipsesource.v8.utils.MemoryManager: boolean access$200(com.eclipsesource.v8.utils.MemoryManager)
com.eclipsesource.v8.debug.V8DebugServer: V8DebugServer(com.eclipsesource.v8.V8,int,boolean)
com.eclipsesource.v8.V8: long _createInspector(long,com.eclipsesource.v8.inspector.V8InspectorDelegate,java.lang.String)
com.eclipsesource.v8.V8Object: java.lang.String toString()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.eclipsesource.v8.V8: int executeIntegerScript(java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8: long _initEmptyContainer(long)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer put(byte)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
com.google.android.gms.common.api.PendingResult: PendingResult()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,boolean)
com.eclipsesource.v8.inspector.V8Inspector: void addDebuggerConnectionListener(com.eclipsesource.v8.inspector.DebuggerConnectionListener)
com.eclipsesource.v8.V8ScriptException: java.lang.String createMessageLine()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.eclipsesource.v8.debug.EventData: void close()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.eclipsesource.v8.NodeJS$1: void invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Array$Undefined: byte getByte(int)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.eclipsesource.v8.V8: int[] arrayGetIntegers(long,long,int,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.eclipsesource.v8.debug.mirror.PropertyMirror: boolean isProperty()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.eclipsesource.v8.V8: boolean arrayGetBoolean(long,long,int)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.eclipsesource.v8.V8TypedArray: void checkSize(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
com.eclipsesource.v8.V8: void shutdownExecutors(boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.eclipsesource.v8.LibraryLoader: void chmod(java.lang.String,java.lang.String)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind: com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind[] values()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.eclipsesource.v8.V8Object: int executeIntegerFunction(java.lang.String,com.eclipsesource.v8.V8Array)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.eclipsesource.v8.utils.V8Executor: boolean isShuttingDown()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.debug.V8DebugServer: java.net.Socket access$802(com.eclipsesource.v8.debug.V8DebugServer,java.net.Socket)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.eclipsesource.v8.debug.mirror.Frame: int getScopeCount()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.eclipsesource.v8.debug.mirror.Scope: com.eclipsesource.v8.debug.mirror.Scope$ScopeType getType()
com.eclipsesource.v8.V8: void checkArgs(java.lang.Object[])
com.eclipsesource.v8.V8ArrayBuffer: int doubleLimit()
com.eclipsesource.v8.PlatformDetector: java.lang.String access$100(java.lang.String)
com.eclipsesource.v8.V8Array: int getIntegers(int,int,int[])
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: void safeRelease(com.eclipsesource.v8.Releasable)
com.eclipsesource.v8.NodeJS: java.io.File createTemporaryScriptFile(java.lang.String,java.lang.String)
com.eclipsesource.v8.debug.BreakEvent: java.lang.String getSourceLineText()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.eclipsesource.v8.NodeJS$2: java.lang.Object invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8: java.lang.String[] _getKeys(long,long)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
com.eclipsesource.v8.V8: java.lang.String executeStringScript(java.lang.String)
com.eclipsesource.v8.V8: void release(long,long)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object add(java.lang.String,com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.utils.V8Map: void close()
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
com.eclipsesource.v8.debug.ScriptBreakPoint: int getBreakPointNumber()
com.eclipsesource.v8.V8ArrayBuffer: float getFloat()
com.eclipsesource.v8.debug.mirror.UndefinedMirror: UndefinedMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: void registerResource(com.eclipsesource.v8.Releasable)
com.eclipsesource.v8.V8Array: void initialize(long,java.lang.Object)
com.eclipsesource.v8.V8Object$Undefined: void release()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putChar(char)
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8Object require(java.io.File)
com.eclipsesource.v8.utils.SingleTypeAdapter: java.lang.Object adapt(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.eclipsesource.v8.V8TypedArray$V8ArrayData: V8TypedArray$V8ArrayData(com.eclipsesource.v8.V8ArrayBuffer,int,int,int)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isArray()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.eclipsesource.v8.V8Array$Undefined: byte[] getBytes(int,int)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.eclipsesource.v8.V8ArrayBuffer: int intLimit()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.eclipsesource.v8.V8: java.lang.String _executeStringScript(long,java.lang.String,java.lang.String,int)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
com.eclipsesource.v8.V8Array$Undefined: int getBytes(int,int,byte[])
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.eclipsesource.v8.V8Array$Undefined: int length()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.NodeJS: void init(com.eclipsesource.v8.V8Function)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.eclipsesource.v8.NodeJS: boolean handleMessage()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.eclipsesource.v8.utils.V8PropertyMap: java.lang.Object remove(java.lang.Object)
com.eclipsesource.v8.V8TypedArray: V8TypedArray(com.eclipsesource.v8.V8)
com.eclipsesource.v8.V8Locker: void checkThread()
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler: MemoryManager$MemoryManagerReferenceHandler(com.eclipsesource.v8.utils.MemoryManager)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
com.eclipsesource.v8.utils.V8Executor: V8Executor(java.lang.String,boolean,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.eclipsesource.v8.V8Object$Undefined: boolean executeBooleanFunction(java.lang.String,com.eclipsesource.v8.V8Array)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getTypedArray(com.eclipsesource.v8.V8Array,int)
com.wuba.fair.logger.Console: void log(java.lang.Object[])
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.eclipsesource.v8.V8RuntimeException: V8RuntimeException(java.lang.String)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.eclipsesource.v8.V8ScriptException: char[] createCharSequence(int,char)
com.eclipsesource.v8.SignatureProvider: byte[] getSignature(java.lang.String)
androidx.window.core.Version: int getPatch()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putFloat(int,float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
com.eclipsesource.v8.V8Function: V8Function(com.eclipsesource.v8.V8)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.V8Array$Undefined: java.lang.String toString()
com.eclipsesource.v8.debug.mirror.ArrayMirror: boolean isArray()
com.eclipsesource.v8.utils.V8Thread: void run()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.eclipsesource.v8.V8ArrayBuffer: int shortLimit()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
com.eclipsesource.v8.utils.V8PropertyMap: java.lang.Object get(java.lang.Object)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.eclipsesource.v8.V8Value: int hashCode()
com.eclipsesource.v8.V8: boolean executeBooleanScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8: void _addArrayStringItem(long,long,java.lang.String)
com.eclipsesource.v8.V8Function: com.eclipsesource.v8.V8Value twin()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.eclipsesource.v8.V8: java.lang.Object _get(long,int,long,java.lang.String)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
com.eclipsesource.v8.V8: void addUndefined(long,long,java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.eclipsesource.v8.debug.mirror.PropertiesArray: int length()
com.eclipsesource.v8.utils.TypedArray: TypedArray(com.eclipsesource.v8.V8TypedArray)
kotlin.jvm.internal.Lambda: Lambda(int)
com.eclipsesource.v8.V8Array$Undefined: int getDoubles(int,int,double[])
com.eclipsesource.v8.utils.ConcurrentV8: void release()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.debug.mirror.SourceLocation: int getColumn()
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8 access$100(com.eclipsesource.v8.NodeJS)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.eclipsesource.v8.debug.V8DebugServer: void access$500(com.eclipsesource.v8.debug.V8DebugServer,com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: int arrayGetSize(long,long)
com.eclipsesource.v8.V8Object$Undefined: java.lang.String getString(java.lang.String)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8: void _setPrototype(long,long,long)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer compact()
com.eclipsesource.v8.utils.ArrayBuffer: ArrayBuffer(com.eclipsesource.v8.V8ArrayBuffer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.eclipsesource.v8.V8ScriptCompilationException: V8ScriptCompilationException(java.lang.String,int,java.lang.String,java.lang.String,int,int)
com.eclipsesource.v8.V8Value: boolean isReleased()
com.eclipsesource.v8.debug.mirror.Frame: boolean isFrame()
androidx.window.core.Version: java.lang.String toString()
com.eclipsesource.v8.Releasable: void release()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.eclipsesource.v8.V8: void releaseObjRef(com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.debug.V8DebugServer: void logError(java.lang.Throwable)
com.eclipsesource.v8.V8: long initEmptyContainer(long)
com.eclipsesource.v8.V8Function: com.eclipsesource.v8.V8Object twin()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.eclipsesource.v8.V8Array: int getType(int)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
com.eclipsesource.v8.V8Value: boolean isUndefined()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Value twin()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.eclipsesource.v8.V8: void notifyReleaseHandlers(com.eclipsesource.v8.V8)
com.eclipsesource.v8.utils.V8ObjectUtils$ListWrapper: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer rewind()
com.eclipsesource.v8.PlatformDetector$Vendor: PlatformDetector$Vendor()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Array getArray(java.lang.String)
com.eclipsesource.v8.V8: int getType(long,long,int)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.eclipsesource.v8.V8: long _getBuildID()
com.eclipsesource.v8.V8Array: int getType(int,int)
com.eclipsesource.v8.V8: void registerV8Executor(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.utils.V8Executor)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.embedding.ActivityStack: boolean isEmpty()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.eclipsesource.v8.V8Function: V8Function(com.eclipsesource.v8.V8,com.eclipsesource.v8.JavaCallback)
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: DebugHandler$BreakpointHandler(com.eclipsesource.v8.debug.DebugHandler)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.eclipsesource.v8.V8: int _arrayGetSize(long,long)
com.eclipsesource.v8.V8Object: void checkKey(java.lang.String)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,double)
com.eclipsesource.v8.utils.V8ObjectUtils$DefaultTypeAdapter: V8ObjectUtils$DefaultTypeAdapter()
androidx.window.R$id: R$id()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.eclipsesource.v8.V8: long initNewV8Int16Array(long,long,int,int)
com.eclipsesource.v8.V8TypedArray: com.eclipsesource.v8.V8Value createTwin()
com.eclipsesource.v8.V8Array: java.lang.Object get(int)
com.eclipsesource.v8.NodeJS$1: NodeJS$1(com.eclipsesource.v8.NodeJS)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.eclipsesource.v8.PlatformDetector$OS: java.lang.String getLibFileExtension()
com.eclipsesource.v8.V8: void _setWeak(long,long)
com.eclipsesource.v8.V8: void _addArrayNullItem(long,long)
com.eclipsesource.v8.V8$MethodDescriptor: V8$MethodDescriptor(com.eclipsesource.v8.V8)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.window.embedding.ActivityFilter: int hashCode()
com.eclipsesource.v8.debug.V8DebugServer: boolean isConnected()
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8 createV8Runtime(java.lang.String)
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(com.eclipsesource.v8.V8Object,java.lang.String)
com.eclipsesource.v8.V8Value: com.eclipsesource.v8.V8Value clearWeak()
com.eclipsesource.v8.V8Object: java.lang.Object executeJSFunction(java.lang.String)
com.eclipsesource.v8.debug.mirror.Frame: com.eclipsesource.v8.debug.mirror.SourceLocation getSourceLocation()
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.eclipsesource.v8.debug.mirror.ObjectMirror: com.eclipsesource.v8.debug.mirror.PropertiesArray getProperties(com.eclipsesource.v8.debug.mirror.ObjectMirror$PropertyKind,int)
com.eclipsesource.v8.V8: java.lang.Object[] getArgs(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8$MethodDescriptor,com.eclipsesource.v8.V8Array,boolean)
com.eclipsesource.v8.JavaCallback: java.lang.Object invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer put(byte[],int,int)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,double)
androidx.window.embedding.MatcherUtils: MatcherUtils()
com.eclipsesource.v8.V8Object$Undefined: boolean getBoolean(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.eclipsesource.v8.V8ArrayBuffer: int limit()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.eclipsesource.v8.debug.mirror.NumberMirror: NumberMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.NodeJS: com.eclipsesource.v8.V8Function access$200(com.eclipsesource.v8.NodeJS)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putLong(int,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.eclipsesource.v8.V8: boolean _getBoolean(long,long,java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.utils.V8PropertyMap: java.util.Collection values()
androidx.window.embedding.SplitRule: float getSplitRatio()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.eclipsesource.v8.V8: long _initNewV8Array(long)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.window.embedding.SplitInfo: float getSplitRatio()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.eclipsesource.v8.V8: boolean _equals(long,long,long)
com.eclipsesource.v8.debug.V8DebugServer: void start()
com.eclipsesource.v8.NodeJS: void exec(java.io.File)
com.eclipsesource.v8.utils.ConcurrentV8$1: void run(com.eclipsesource.v8.V8)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.eclipsesource.v8.V8Locker: void acquire()
com.eclipsesource.v8.PlatformDetector$Vendor: void closeQuietly(java.io.Closeable)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
kotlin.jvm.internal.FunctionReference: int hashCode()
com.eclipsesource.v8.V8: int getInteger(long,long,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.eclipsesource.v8.V8Object$Undefined: boolean isReleased()
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaVoidCallback,java.lang.String)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.eclipsesource.v8.PlatformDetector$OS: boolean isNativeClient()
com.eclipsesource.v8.V8Value: java.lang.String getConstructorName()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.eclipsesource.v8.V8: void createTwin(com.eclipsesource.v8.V8Value,com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.V8Array$Undefined: java.lang.String[] getStrings(int,int)
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array push(double)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.eclipsesource.v8.V8: boolean _strictEquals(long,long,long)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
com.eclipsesource.v8.V8Locker: void release()
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.eclipsesource.v8.V8: int getType(long,long,int,int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.eclipsesource.v8.V8: double _executeDoubleScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.debug.DebugHandler$DebugEvent: com.eclipsesource.v8.debug.DebugHandler$DebugEvent valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.eclipsesource.v8.PlatformDetector$Vendor: java.lang.String parseLinuxOsReleaseFile(java.io.File)
com.eclipsesource.v8.V8: void addObjRef(com.eclipsesource.v8.V8Value)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.window.layout.WindowMetrics: int hashCode()
com.eclipsesource.v8.debug.mirror.SourceLocation: SourceLocation(java.lang.String,int,int,int,java.lang.String)
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int access$200(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
com.eclipsesource.v8.V8Array$Undefined: int getInteger(java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
com.eclipsesource.v8.V8Array$Undefined: boolean isReleased()
com.eclipsesource.v8.V8: java.lang.Object _executeFunction(long,int,long,java.lang.String,long)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,int)
androidx.window.core.Bounds: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.eclipsesource.v8.V8: java.lang.String[] _arrayGetStrings(long,long,int,int)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object getObject(java.lang.String)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.eclipsesource.v8.V8: int getArrayType(long,long)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8: int _arrayGetStrings(long,long,int,int,java.lang.String[])
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.eclipsesource.v8.V8ArrayBuffer: double getDouble()
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getV8Result(com.eclipsesource.v8.V8,java.lang.Object,java.util.Map)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.eclipsesource.v8.V8: byte[] arrayGetBytes(long,long,int,int)
com.eclipsesource.v8.V8: long _getGlobalObject(long)
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.eclipsesource.v8.debug.DebugHandler: DebugHandler(com.eclipsesource.v8.V8)
com.eclipsesource.v8.debug.mirror.ValueMirror: ValueMirror(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: java.lang.String _getConstructorName(long,long)
com.eclipsesource.v8.inspector.V8Inspector: com.eclipsesource.v8.inspector.V8Inspector createV8Inspector(com.eclipsesource.v8.V8,com.eclipsesource.v8.inspector.V8InspectorDelegate)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.eclipsesource.v8.V8Object: java.lang.String[] getKeys()
com.eclipsesource.v8.V8ScriptException: int getStartColumn()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.eclipsesource.v8.debug.mirror.PropertiesArray: void release()
androidx.window.core.Version: int getMinor()
com.example.flutter_fair_demo.MainActivity: MainActivity()
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer get(byte[],int,int)
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8: double[] arrayGetDoubles(long,long,int,int)
com.eclipsesource.v8.debug.ScriptBreakPoint: void setCondition(java.lang.String)
com.eclipsesource.v8.utils.ArrayBuffer: boolean isAvailable()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
com.eclipsesource.v8.PlatformDetector$Arch: java.lang.String getName()
com.eclipsesource.v8.debug.mirror.PropertiesArray: void close()
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.eclipsesource.v8.V8: long initNewV8Float32Array(long,long,int,int)
com.eclipsesource.v8.V8: long _createIsolate(java.lang.String)
androidx.window.embedding.ActivityRule: int hashCode()
com.eclipsesource.v8.V8: boolean contains(long,long,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.eclipsesource.v8.V8: void checkRuntime(com.eclipsesource.v8.V8Value)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
com.eclipsesource.v8.V8: java.lang.Object getVarArgContainer(java.lang.Class[],int)
androidx.window.embedding.SplitRule: int getLayoutDirection()
com.eclipsesource.v8.V8: boolean isVoidMethod(java.lang.reflect.Method)
com.eclipsesource.v8.debug.mirror.Scope: void setVariableValue(java.lang.String,double)
com.eclipsesource.v8.debug.mirror.NumberMirror: boolean isNumber()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: boolean skipToolInfo(byte[],int)
com.eclipsesource.v8.V8: int arrayGetBytes(long,long,int,int,byte[])
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
com.eclipsesource.v8.V8: long _initNewV8UInt8ClampedArray(long,long,int,int)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isNumber()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: V8DebugServer$ClientLoop(com.eclipsesource.v8.debug.V8DebugServer)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array$Undefined twin()
com.eclipsesource.v8.V8Object: boolean contains(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.eclipsesource.v8.utils.V8ObjectUtils: java.lang.Object getValue(java.lang.Object,com.eclipsesource.v8.utils.TypeAdapter)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.eclipsesource.v8.utils.MemoryManager: void release()
com.eclipsesource.v8.V8: double _arrayGetDouble(long,long,int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.eclipsesource.v8.V8: boolean _isRunning(long)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isObject()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.eclipsesource.v8.V8: void releaseLock(long)
com.wuba.fair.channel.FairFfi: java.lang.String invokeJSCommonFuncSync(java.lang.String)
com.eclipsesource.v8.PlatformDetector: PlatformDetector()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.eclipsesource.v8.V8: double _getDouble(long,long,java.lang.String)
com.eclipsesource.v8.NodeJS: java.lang.String getNodeVersion()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.eclipsesource.v8.debug.BreakEvent: int getSourceColumn()
com.eclipsesource.v8.V8: java.lang.String arrayGetString(long,long,int)
com.eclipsesource.v8.inspector.V8Inspector: void dispatchProtocolMessage(java.lang.String)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.eclipsesource.v8.debug.V8DebugServer$ClientLoop: V8DebugServer$ClientLoop(com.eclipsesource.v8.debug.V8DebugServer,com.eclipsesource.v8.debug.V8DebugServer$1)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
com.eclipsesource.v8.V8: long _initNewV8ArrayBuffer(long,int)
com.eclipsesource.v8.V8Array$Undefined: java.lang.String getString(int)
com.eclipsesource.v8.V8ArrayBuffer: long getLong()
com.eclipsesource.v8.debug.mirror.Mirror: boolean isValue(com.eclipsesource.v8.V8Object)
com.eclipsesource.v8.V8: int _getType(long,long)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaVoidCallback,java.lang.String)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object getObject(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.eclipsesource.v8.V8: java.lang.Object getArrayItem(com.eclipsesource.v8.V8Array,int)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
com.eclipsesource.v8.V8Value: boolean strictEquals(java.lang.Object)
com.eclipsesource.v8.V8: com.eclipsesource.v8.V8Object executeObjectScript(java.lang.String)
com.eclipsesource.v8.V8TypedArray$V8ArrayData: int access$000(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.eclipsesource.v8.debug.mirror.ArrayMirror: int length()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
com.eclipsesource.v8.V8: void _add(long,long,java.lang.String,java.lang.String)
com.eclipsesource.v8.V8Array: int length()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.eclipsesource.v8.V8Array$Undefined: boolean[] getBooleans(int,int)
com.eclipsesource.v8.debug.mirror.Frame: com.eclipsesource.v8.debug.mirror.Scope getScope(int)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array getArray(int)
com.eclipsesource.v8.debug.mirror.Mirror: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.eclipsesource.v8.debug.mirror.NullMirror: NullMirror(com.eclipsesource.v8.V8Object)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.eclipsesource.v8.V8ScriptException: int getEndColumn()
com.eclipsesource.v8.debug.mirror.Mirror: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.eclipsesource.v8.utils.V8Executor: void run()
androidx.lifecycle.ViewModel: ViewModel()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.eclipsesource.v8.V8: java.lang.String getSCMRevision()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(com.eclipsesource.v8.V8Value)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.eclipsesource.v8.debug.mirror.ObjectMirror: ObjectMirror(com.eclipsesource.v8.V8Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.eclipsesource.v8.V8: void executeVoidScript(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.eclipsesource.v8.PlatformDetector: java.lang.String normalize(java.lang.String)
com.eclipsesource.v8.V8TypedArray: void checkArrayProperties(com.eclipsesource.v8.V8TypedArray$V8ArrayData)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.eclipsesource.v8.V8: java.lang.String executeStringScript(java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.eclipsesource.v8.V8: void _add(long,long,java.lang.String,boolean)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
com.eclipsesource.v8.V8: boolean[] _arrayGetBooleans(long,long,int,int)
com.eclipsesource.v8.V8: java.nio.ByteBuffer _createV8ArrayBufferBackingStore(long,long,int)
com.eclipsesource.v8.V8Object$Undefined: int hashCode()
com.eclipsesource.v8.V8: long _initNewV8Int8Array(long,long,int,int)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
com.eclipsesource.v8.debug.mirror.NullMirror: boolean isNull()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.eclipsesource.v8.LibraryLoader: java.lang.String computeLibraryShortName(boolean)
androidx.core.graphics.drawable.IconCompat: IconCompat()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.eclipsesource.v8.utils.V8Executor: void forceTermination()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.eclipsesource.v8.V8: int _getType(long,long,java.lang.String)
com.eclipsesource.v8.V8TypedArray: java.lang.Object get(int)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Array push(int)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
com.eclipsesource.v8.V8Value: long getHandle()
com.eclipsesource.v8.V8ArrayBuffer: float getFloat(int)
com.eclipsesource.v8.debug.mirror.PropertiesArray: com.eclipsesource.v8.debug.mirror.PropertyMirror getProperty(int)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,java.lang.String)
com.eclipsesource.v8.utils.V8ObjectUtils: com.eclipsesource.v8.V8Object toV8Object(com.eclipsesource.v8.V8,java.util.Map)
com.eclipsesource.v8.debug.V8DebugServer$EventHandler: V8DebugServer$EventHandler(com.eclipsesource.v8.debug.V8DebugServer,com.eclipsesource.v8.debug.V8DebugServer$1)
com.eclipsesource.v8.V8: void addReleaseHandler(com.eclipsesource.v8.utils.V8Runnable)
com.eclipsesource.v8.V8ArrayBuffer: long getLong(int)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Array executeArrayFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8: int _executeIntegerScript(long,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8: boolean _arrayGetBoolean(long,long,int)
com.eclipsesource.v8.V8: java.lang.Object _arrayGet(long,int,long,int)
com.eclipsesource.v8.debug.DebugHandler$BreakpointHandler: void invoke(com.eclipsesource.v8.V8Object,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Value: void close()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.eclipsesource.v8.debug.mirror.NullMirror: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.eclipsesource.v8.V8: void notifyReferenceCreated(com.eclipsesource.v8.V8Value)
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Object executeObjectFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.debug.mirror.Mirror: boolean isNull(com.eclipsesource.v8.V8Object)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.eclipsesource.v8.debug.DebugHandler: void addBreakHandler(com.eclipsesource.v8.debug.BreakHandler)
com.eclipsesource.v8.V8: void addArrayIntItem(long,long,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.eclipsesource.v8.utils.ConcurrentV8: void run(com.eclipsesource.v8.utils.V8Runnable)
com.eclipsesource.v8.V8: int arrayGetInteger(long,long,int)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.eclipsesource.v8.V8: void release(boolean)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
com.eclipsesource.v8.V8: java.lang.String _toString(long,long)
com.eclipsesource.v8.V8: double[] _arrayGetDoubles(long,long,int,int)
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Value createTwin()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
com.eclipsesource.v8.debug.V8DebugServer: boolean access$902(com.eclipsesource.v8.debug.V8DebugServer,boolean)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.eclipsesource.v8.V8: void removeReferenceHandler(com.eclipsesource.v8.ReferenceHandler)
com.eclipsesource.v8.V8Array$Undefined: void close()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.eclipsesource.v8.utils.MemoryManager$MemoryManagerReferenceHandler: MemoryManager$MemoryManagerReferenceHandler(com.eclipsesource.v8.utils.MemoryManager,com.eclipsesource.v8.utils.MemoryManager$1)
com.eclipsesource.v8.debug.DebugHandler: void setupDebugObject(com.eclipsesource.v8.V8)
androidx.window.core.Version$Companion: Version$Companion()
com.eclipsesource.v8.V8Array$Undefined: com.eclipsesource.v8.V8Array executeArrayFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8Array$Undefined: int getStrings(int,int,java.lang.String[])
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.eclipsesource.v8.utils.V8ObjectUtils: void pushValue(com.eclipsesource.v8.V8,com.eclipsesource.v8.V8Array,java.lang.Object)
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.eclipsesource.v8.V8: java.lang.Object executeScript(java.lang.String)
com.eclipsesource.v8.V8Function: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.eclipsesource.v8.V8ScriptException: java.lang.String createMessageDetails()
com.eclipsesource.v8.V8Locker: boolean hasLock()
com.eclipsesource.v8.V8Value: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
com.eclipsesource.v8.debug.ScriptBreakPoint: java.lang.String getCondition()
com.eclipsesource.v8.debug.V8DebugServer: java.net.ServerSocket access$600(com.eclipsesource.v8.debug.V8DebugServer)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
com.eclipsesource.v8.utils.V8ObjectUtils: V8ObjectUtils()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
com.eclipsesource.v8.utils.ConcurrentV8: ConcurrentV8()
com.eclipsesource.v8.debug.DebugHandler: int[] getScriptBreakPointIDs()
com.eclipsesource.v8.V8: void add(long,long,java.lang.String,double)
com.eclipsesource.v8.V8: void add(long,long,java.lang.String,java.lang.String)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.eclipsesource.v8.V8ScriptException: java.lang.String getJSStackTrace()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.eclipsesource.v8.V8TypedArray: int getStructureSize(int)
com.eclipsesource.v8.V8Array: V8Array(com.eclipsesource.v8.V8,java.lang.Object)
androidx.window.R: R()
com.eclipsesource.v8.debug.ExecutionState: com.eclipsesource.v8.debug.mirror.Frame getFrame(int)
com.eclipsesource.v8.NodeJS: NodeJS(com.eclipsesource.v8.V8)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.V8: java.nio.ByteBuffer createV8ArrayBufferBackingStore(long,long,int)
com.eclipsesource.v8.utils.V8PropertyMap: boolean containsKey(java.lang.Object)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.eclipsesource.v8.debug.DebugHandler: int setBreakpoint(com.eclipsesource.v8.V8Function)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.eclipsesource.v8.debug.mirror.SourceLocation: java.lang.String toString()
com.eclipsesource.v8.V8ArrayBuffer: V8ArrayBuffer(com.eclipsesource.v8.V8,java.nio.ByteBuffer)
com.eclipsesource.v8.V8ScriptException: java.lang.String getJSMessage()
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8 getRuntime()
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.eclipsesource.v8.V8: void addArrayDoubleItem(long,long,double)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
com.eclipsesource.v8.V8: long initNewV8UInt32Array(long,long,int,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.eclipsesource.v8.debug.V8DebugServer: java.net.Socket access$800(com.eclipsesource.v8.debug.V8DebugServer)
com.eclipsesource.v8.debug.mirror.PropertyMirror: java.lang.String getName()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.eclipsesource.v8.V8Function: com.eclipsesource.v8.V8Function twin()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.eclipsesource.v8.V8Array: V8Array()
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.eclipsesource.v8.utils.TypeAdapter: java.lang.Object adapt(int,java.lang.Object)
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.eclipsesource.v8.V8: boolean _executeBooleanScript(long,java.lang.String,java.lang.String,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.eclipsesource.v8.V8Object$Undefined: void executeVoidFunction(java.lang.String,com.eclipsesource.v8.V8Array)
com.eclipsesource.v8.V8ArrayBuffer: com.eclipsesource.v8.V8ArrayBuffer putInt(int,int)
com.eclipsesource.v8.V8ArrayBuffer: short getShort()
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.eclipsesource.v8.debug.V8DebugServer: byte[] access$1400()
com.eclipsesource.v8.debug.mirror.Frame: com.eclipsesource.v8.debug.mirror.ValueMirror getArgumentValue(int)
com.eclipsesource.v8.V8Object$Undefined: java.lang.String executeStringFunction(java.lang.String,com.eclipsesource.v8.V8Array)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.eclipsesource.v8.V8Object$Undefined: com.eclipsesource.v8.V8Object add(java.lang.String,int)
com.eclipsesource.v8.V8: int getType(long,long,java.lang.String)
com.eclipsesource.v8.debug.mirror.PropertyMirror: com.eclipsesource.v8.debug.mirror.Mirror getValue()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.eclipsesource.v8.debug.mirror.FunctionMirror: FunctionMirror(com.eclipsesource.v8.V8Object)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.eclipsesource.v8.debug.DebugHandler: int setScriptBreakpoint(java.lang.String,int)
com.eclipsesource.v8.debug.mirror.Mirror: Mirror(com.eclipsesource.v8.V8Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
com.eclipsesource.v8.V8: void terminateExecution()
com.wuba.fair.logger.Console: void warn(java.lang.Object[])
com.eclipsesource.v8.V8Object: com.eclipsesource.v8.V8Object registerJavaMethod(com.eclipsesource.v8.JavaCallback,java.lang.String)
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.eclipsesource.v8.V8Array: com.eclipsesource.v8.V8Value twin()
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
com.eclipsesource.v8.V8Array: byte getByte(int)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.eclipsesource.v8.debug.mirror.Scope: com.eclipsesource.v8.debug.mirror.ObjectMirror getScopeObject()
com.eclipsesource.v8.V8: int _arrayGetDoubles(long,long,int,int,double[])
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
